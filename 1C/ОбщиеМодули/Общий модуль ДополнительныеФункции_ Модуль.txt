Процедура ЗаписатьСотрудникаВСмену(Сотрудник,Должность,Поле) Экспорт 
	МН=РегистрыСведений.СменыРаботников.СоздатьМенеджерЗаписи(); 
	МН.Период	=ТекущаяДата();
	МН.Должность=Должность;
	МН.Сотрудник=Сотрудник;
	МН.Поле		=Поле;
	МН.Прочитать();
	МН.Сотрудник=Сотрудник;
	МН.Должность=Должность;
	МН.Период	=ТекущаяДата();
	МН.Поле		=Поле;
	МН.Записать(Истина);
КонецПроцедуры

Функция НовыйЯщик(НазвТерритории) Экспорт
	Если не ЗначениеЗаполнено(НазвТерритории) Тогда
	     возврат "";
	КонецЕсли; 
	Суффикс=" - "+ЛЕВ(НазвТерритории,1) + Прав(НазвТерритории,1);
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Помещения.Владелец,
		|	Помещения.Наименование КАК Наименование,
		|	Помещения.Представление
		|ИЗ
		|	Справочник.Помещения КАК Помещения
		|ГДЕ
		|	Помещения.ПометкаУдаления = ЛОЖЬ
		|	И Помещения.Владелец = &Владелец
		|
		|УПОРЯДОЧИТЬ ПО
		|	Наименование УБЫВ";

	Запрос.УстановитьПараметр("Владелец", Справочники.Территории.НайтиПоНаименованию(НазвТерритории));
	Результат = Запрос.Выполнить();
    Если не Результат.Пустой() Тогда
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		НовНомер=Число(Лев(ВыборкаДетальныеЗаписи.Наименование,3))+1;
	Иначе 
		НовНомер=1;
	КонецЕсли; 
    возврат Формат(НовНомер,"ЧЦ=2; ЧДЦ=0; ЧВН=; ЧГ=0")+Суффикс;
КонецФункции

Функция ПолучитьЦветТерритории(Территория) Экспорт 
	ТекущийЦвет = Территория.Цвет.Получить();
	Если ТипЗнч(ТекущийЦвет) <> Тип("Цвет") Тогда
		ТекущийЦвет = Новый Цвет();
	КонецЕсли;
	возврат ТекущийЦвет;
КонецФункции

Процедура УбратьСотрудникаСоСмены(Сотрудник,Должность,Поле) Экспорт 
	МН=РегистрыСведений.СменыРаботников.СоздатьМенеджерЗаписи(); 
	МН.Период	=ТекущаяДата();
	МН.Должность=Должность;
	МН.Сотрудник=Сотрудник;
	МН.Поле		=Поле;
	МН.Удалить();
КонецПроцедуры

//Строка в форме документа
Процедура НадписьСрокДействия(КолДней,ДатаС,ДатаПо,ЭтаФорма,ОстатокПосещений=0,ЭтоГрупповыеЗанятия=Ложь) Экспорт
	СтрОстатокПосещений="";
	Если ЭтоГрупповыеЗанятия Тогда
		СтрОстатокПосещений=" (остаток Г/З "+ОстатокПосещений+" )";
	КонецЕсли;
	СтрНадпись="с "+Формат(ДатаС,"ДФ=dd.MM.yy")+" по "+Формат(ДатаПо,"ДФ=dd.MM.yy");
	Если КолДней < 0 или (ОстатокПосещений=0 И  ЭтоГрупповыеЗанятия) тогда
		ЭтаФорма.ЭлементыФормы.НадписьСрокДействия.ЦветТекста=WebЦвета.СветлоРозовый; 
		ЭтаФорма.ЭлементыФормы.НадписьСрокДействия.БегущаяСтрока=РежимБегущейСтроки.НеИспользовать;
		ЭтаФорма.ЭлементыФормы.НадписьСрокДействия.Значение	=СтрНадпись+" "+СтрОстатокПосещений;
	ИначеЕсли 	КолДней < 5 или (ОстатокПосещений<=2 И ЭтоГрупповыеЗанятия) Тогда
		ЭтаФорма.ЭлементыФормы.НадписьСрокДействия.ЦветТекста=WebЦвета.Красный; 
		ЭтаФорма.ЭлементыФормы.НадписьСрокДействия.БегущаяСтрока=РежимБегущейСтроки.НеИспользовать;
		ЭтаФорма.ЭлементыФормы.НадписьСрокДействия.Значение	=СтрНадпись+"  (через "+Формат(КолДней,"ЧДЦ=0; ЧН=0; ЧГ=0")+" дн.)" +" "+СтрОстатокПосещений;
	Иначе
		ЭтаФорма.ЭлементыФормы.НадписьСрокДействия.ЦветТекста=WebЦвета.Зеленый; 
		ЭтаФорма.ЭлементыФормы.НадписьСрокДействия.БегущаяСтрока=РежимБегущейСтроки.НеИспользовать;
		ЭтаФорма.ЭлементыФормы.НадписьСрокДействия.Значение	= СтрНадпись+" ("+ Формат(КолДней,"ЧДЦ=0; ЧН=0; ЧГ=0")+" дн.)"+" "+СтрОстатокПосещений;
	КонецЕсли;
КонецПроцедуры

//возврат структура 
Функция РасчетОставшихсяДней(Абонемент) Экспорт 
	КолДней=0;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВремяДействияАбонементаСрезПоследних.Период,
	|	ВремяДействияАбонементаСрезПоследних.Регистратор,
	|	ВремяДействияАбонементаСрезПоследних.НомерСтроки,
	|	ВремяДействияАбонементаСрезПоследних.Активность,
	|	ВремяДействияАбонементаСрезПоследних.Абонемент,
	|	ВремяДействияАбонементаСрезПоследних.ВидАбонемента,
	|	ВремяДействияАбонементаСрезПоследних.ДатаОкончания,
	|	ВремяДействияАбонементаСрезПоследних.ДатаНачала
	|ИЗ
	|	РегистрСведений.ВремяДействияАбонемента.СрезПоследних(&Дата, Абонемент = &Абонемент) КАК ВремяДействияАбонементаСрезПоследних
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВремяДействияАбонементаСрезПоследних.Период УБЫВ";
	
	Запрос.УстановитьПараметр("Абонемент", Абонемент);
	Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	Результат = Запрос.Выполнить();
	КолДней=-1;
	ДатаНач=Дата(1,1,1);
	ДатаКон=Дата(1,1,1);	
	Если не Результат.Пустой() тогда
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий(); 
		КолДней			=(ВыборкаДетальныеЗаписи.ДатаОкончания-НачалоДня(ТекущаяДата()))/24/3600;
		ДатаНач      	= ВыборкаДетальныеЗаписи.ДатаНачала;
		ДатаКон			= ВыборкаДетальныеЗаписи.ДатаОкончания;
	КонецЕсли;
	//Оставщиеся посещения
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОплаченныеПосещенияОстатки.КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.ОплаченныеПосещения.Остатки(
		|			&Дата,
		|			Абонемент = &Абонемент
		|				И ВидАбонемента = &ВидАбонемента) КАК ОплаченныеПосещенияОстатки";

	Запрос.УстановитьПараметр("Абонемент", Абонемент);
	Запрос.УстановитьПараметр("ВидАбонемента", Абонемент.ВидАбонемента);
	Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	Результат = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	ОстатокПосещений=0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОстатокПосещений=ВыборкаДетальныеЗаписи.КоличествоОстаток;
	КонецЦикла;
    возврат Новый Структура("КолДней,ДатаНачала,ДатаОкончания,ОстатокПосещений", КолДней, ДатаНач, ДатаКон,ОстатокПосещений);
КонецФункции

Функция НайтиСотрудника(Должность,Поле,Дата) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СменыРаботниковСрезПервых.Период,
		|	СменыРаботниковСрезПервых.Должность,
		|	СменыРаботниковСрезПервых.Сотрудник,
		|	СменыРаботниковСрезПервых.Поле
		|ИЗ
		|	РегистрСведений.СменыРаботников.СрезПервых(&Дата, Должность = &Должность И Поле = &Поле ) КАК СменыРаботниковСрезПервых";

	Запрос.УстановитьПараметр("Дата", НачалоДня(Дата));
	Запрос.УстановитьПараметр("Должность", Должность);
	Запрос.УстановитьПараметр("Поле", СокрЛП(Поле));
	Результат = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
    Если не Результат.Пустой() Тогда
	     ВыборкаДетальныеЗаписи.Следующий();
		 возврат ВыборкаДетальныеЗаписи.Сотрудник;
	КонецЕсли; 
	возврат Справочники.ФизическиеЛица.ПустаяСсылка();
КонецФункции // НайтиСотрудника()

Функция АбонементЗаморожен(Абонемент) Экспорт
	ЗапросЗаморозки=новый запрос;
	ЗапросЗаморозки.Текст="ВЫБРАТЬ
	 |	ПриостановкаАбонемента.Ссылка КАК ДокСсылка,
	 |	ПриостановкаАбонемента.Клиент,
	 |	ПриостановкаАбонемента.ДнейЗапаса
	 |ИЗ
	 |	Документ.ПриостановкаАбонемента КАК ПриостановкаАбонемента
	 |ГДЕ
	 |	ПриостановкаАбонемента.ДокументОплаты В
	 |			(ВЫБРАТЬ ПЕРВЫЕ 1
	 |				ВремяДействияАбонементаСрезПоследних.Регистратор
	 |			ИЗ
	 |				РегистрСведений.ВремяДействияАбонемента.СрезПоследних(&Дата, Абонемент = &Абонемент) КАК ВремяДействияАбонементаСрезПоследних
	 |			УПОРЯДОЧИТЬ ПО
	 |				ВремяДействияАбонементаСрезПоследних.Период УБЫВ)";
	 ЗапросЗаморозки.УстановитьПараметр("Абонемент", Абонемент);
	 ЗапросЗаморозки.УстановитьПараметр("Дата", ТекущаяДата());
	 РезультатЗаморозки = ЗапросЗаморозки.Выполнить();
	 Если не РезультатЗаморозки.Пустой() Тогда
		рз=РезультатЗаморозки.Выбрать();
		рз.Следующий();
		Возврат рз.ДокСсылка;
	 Иначе
		Возврат неопределено;
	 КонецЕсли; 
КонецФункции //

Функция РасчетПоказателейАбонемента(Абонемент) Экспорт
	КолДней=0;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВремяДействияАбонементаСрезПоследних.Период,
	|	ВремяДействияАбонементаСрезПоследних.Регистратор,
	|	ВремяДействияАбонементаСрезПоследних.НомерСтроки,
	|	ВремяДействияАбонементаСрезПоследних.Активность,
	|	ВремяДействияАбонементаСрезПоследних.Абонемент,
	|	ВремяДействияАбонементаСрезПоследних.ВидАбонемента,
	|	ВремяДействияАбонементаСрезПоследних.ДатаОкончания,
	|	ВремяДействияАбонементаСрезПоследних.ДатаНачала
	|ИЗ
	|	РегистрСведений.ВремяДействияАбонемента.СрезПоследних(&Дата, Абонемент = &Абонемент) КАК ВремяДействияАбонементаСрезПоследних
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВремяДействияАбонементаСрезПоследних.Период УБЫВ";
	
	Запрос.УстановитьПараметр("Абонемент", Абонемент);
	Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	Результат = Запрос.Выполнить();
	КолДней=-1;
	ДатаНач=Дата(1,1,1);
	ДатаКон=Дата(1,1,1);	
	Если не Результат.Пустой() тогда
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий(); 
		КолДней			=(ВыборкаДетальныеЗаписи.ДатаОкончания-НачалоДня(ТекущаяДата()))/24/3600;
		ДатаНач      	= ВыборкаДетальныеЗаписи.ДатаНачала;
		ДатаКон			= ВыборкаДетальныеЗаписи.ДатаОкончания;
	КонецЕсли;
	//Оставщиеся посещения
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОплаченныеПосещенияОстатки.КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.ОплаченныеПосещения.Остатки(
		|			&Дата,
		|			Абонемент = &Абонемент
		|				И ВидАбонемента = &ВидАбонемента) КАК ОплаченныеПосещенияОстатки";

	Запрос.УстановитьПараметр("Абонемент", Абонемент);
	Запрос.УстановитьПараметр("ВидАбонемента", Абонемент.ВидАбонемента);
	Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	Результат = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	ОстатокПосещений=0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОстатокПосещений=ВыборкаДетальныеЗаписи.КоличествоОстаток;
	КонецЦикла;
    возврат Новый Структура("КолДней,ДатаНачала,ДатаОкончания,ОстатокПосещений", КолДней, ДатаНач, ДатаКон,ОстатокПосещений);	
КонецФункции

Функция ПолучитьБлижайшееГрупповоеЗанятие(ТипГЗ,Дата)  Экспорт
	СмещениеПеременной=Формат(ДеньНедели(Дата)-1,"ЧЦ=1; ЧДЦ=0; ЧН=0");
	запрос_ГЗ=новый запрос; 
	запрос_ГЗ.Текст="ВЫБРАТЬ
	|	ГрупповыеЗанятия.Ссылка,
	|	ГрупповыеЗанятия.Код,
	|	ГрупповыеЗанятия.Наименование,
	|	ГрупповыеЗанятия.Тренер,
	|	ГрупповыеЗанятия.Продолжительность,
	|	ГрупповыеЗанятия.Дн_0,
	|	ГрупповыеЗанятия.Дн_1,
	|	ГрупповыеЗанятия.Дн_2,
	|	ГрупповыеЗанятия.Дн_3,
	|	ГрупповыеЗанятия.Дн_4,
	|	ГрупповыеЗанятия.Дн_5,
	|	ГрупповыеЗанятия.Дн_6,
	|	ГрупповыеЗанятия.ВремяНачала_0,
	|	ГрупповыеЗанятия.ВремяНачала_1,
	|	ГрупповыеЗанятия.ВремяНачала_2,
	|	ГрупповыеЗанятия.ВремяНачала_3,
	|	ГрупповыеЗанятия.ВремяНачала_4,
	|	ГрупповыеЗанятия.ВремяНачала_5,
	|	ГрупповыеЗанятия.ВремяНачала_6,
	|	ГрупповыеЗанятия.Комментарий
	|ИЗ
	|	Справочник.ГрупповыеЗанятия КАК ГрупповыеЗанятия
	|ГДЕ
	|	ГрупповыеЗанятия.Активность = ИСТИНА
	|	И ГрупповыеЗанятия.ПометкаУдаления = ЛОЖЬ
	|	И ГрупповыеЗанятия.ТипыГрупповыхЗанятий = &ТипыГрупповыхЗанятий
	|	И ГрупповыеЗанятия.Дн_"+СмещениеПеременной+" = ИСТИНА
	|	И (ДОБАВИТЬКДАТЕ(ГрупповыеЗанятия.ВремяНачала_"+СмещениеПеременной+", МИНУТА, -30) <= &Время И ДОБАВИТЬКДАТЕ(ГрупповыеЗанятия.ВремяНачала_"+СмещениеПеременной+", МИНУТА, 15) >= &Время)" ;
			
	запрос_ГЗ.УстановитьПараметр("ТипыГрупповыхЗанятий",ТипГЗ);
	//Дата2=Дата+900;
	//Дата=Дата-1800;
	//1231235697683   ДОБАВИТЬКДАТЕ(ГрупповыеЗанятия.ВремяНачала_4,Минуты,30)      
	запрос_ГЗ.УстановитьПараметр("Время",Дата(1,1,1,Час(Дата),Минута(Дата),0));
	
	РЗ=запрос_ГЗ.Выполнить();
	ТекущГрупповоеЗанятие=Справочники.ГрупповыеЗанятия.ПустаяСсылка();
	Если не РЗ.Пустой() тогда
		выборка_РЗ=РЗ.Выбрать();
		выборка_РЗ.Следующий();
		ГЗ=выборка_РЗ.Ссылка;
		возврат ГЗ;
	КонецЕсли;
	возврат неопределено;
КонецФункции

