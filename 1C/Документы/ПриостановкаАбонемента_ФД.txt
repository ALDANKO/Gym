Перем мТекущееОсновноеИзображение;
Перем мПустаяКартинка; 

Процедура ПриОткрытии()
	Если ЭтоНовый() тогда
		ЭтотОбъект.Дата=ТекущаяДата();
		ЭтотОбъект.ДатаОстановки=ТекущаяДата();
		Если ЗначениеЗаполнено(ЭтотОбъект.Абонемент) тогда
			ЭлементыФормы.Клиент.Значение=ЭлементыФормы.Абонемент.Значение.Клиент;
			Если мТекущееОсновноеИзображение <> ЭлементыФормы.Абонемент.Значение.Клиент.ОсновноеИзображение.Хранилище.Получить() Тогда
				мТекущееОсновноеИзображение = ЭтотОбъект.Клиент.ОсновноеИзображение.Хранилище.Получить();
				ПоказатьОсновноеИзображение();
			КонецЕсли;		
		КонецЕсли;                                                            //групповые занятия
		ЭтотОбъект.ДнейПростоя=?(ЭлементыФормы.Абонемент.Значение.ВидАбонемента.Родитель.Код="00000000038"
		или  ЭлементыФормы.Абонемент.Значение.ВидАбонемента.Родитель.Родитель.Код="00000000038",1,5);
		ЭтотОбъект.Клиент=ЭтотОбъект.Абонемент.Клиент;
		//Определеное  дней запаса
		ЭтотОбъект.ДнейЗапаса=ОпределеноеДнейЗапаса(ЭтотОбъект.Абонемент);
		ПроверитьАбонемент();
		мСотрудник=ДополнительныеФункции.НайтиСотрудника(Справочники.ДолжностиОрганизаций.НайтиПоКоду("000000004"),"НадписьАдминистратор",ТекущаяДата());
		АдминСЗ=мСотрудник;
	Иначе
		ЭлементыФормы.Клиент.Значение=ЭлементыФормы.Абонемент.Значение.Клиент;
	КонецЕсли;
	//Если Проведен Тогда
	//	ЭтаФорма.ТолькоПросмотр=Истина;
	//Иначе
	//	ЭтаФорма.ТолькоПросмотр=Ложь;
	//КонецЕсли; 
	//ЭлементыФормы.Дата.Доступность=Ложь;
КонецПроцедуры

Процедура ОбновлениеОтображения()
	Если ЗначениеЗаполнено(ЭтотОбъект.Абонемент) тогда
		ЭлементыФормы.НадписьКлиент.Значение=ЭлементыФормы.Абонемент.Значение.Клиент.Наименование;
		Если мТекущееОсновноеИзображение <> ЭлементыФормы.Абонемент.Значение.Клиент.ОсновноеИзображение.Хранилище.Получить() Тогда
			мТекущееОсновноеИзображение = ЭлементыФормы.Абонемент.Значение.Клиент.ОсновноеИзображение.Хранилище.Получить();
			ПоказатьОсновноеИзображение();
		КонецЕсли;		
		ЭлементыФормы.ВремяДействия.Значение="действителен до "+Формат(ЭтотОбъект.ВремяДействия,"ДЛФ=DD");
	КонецЕсли;
	Если ЗначениеЗаполнено(ЭтотОбъект.ДатаВозобновления) тогда
		ЭтотОбъект.ДнейПростоя=(1+(НачалоДня(ЭлементыФормы.ДатаЗавершенияОстановки.Значение)-НачалоДня(ЭлементыФормы.ДатаОстановки.Значение))/24/3600)
	КонецЕсли;	
КонецПроцедуры

Процедура ПоказатьОсновноеИзображение()

	Если мТекущееОсновноеИзображение = Неопределено Тогда
		ЭлементыФормы.ОсновноеИзображение.Картинка = мПустаяКартинка;
	Иначе
		ЭлементыФормы.ОсновноеИзображение.Картинка = мТекущееОсновноеИзображение;
	КонецЕсли;

КонецПроцедуры // ПоказатьОсновноеИзображение()

Процедура АбонементПриИзменении(Элемент)
	Если Элемент.Значение.ВидАбонемента.Родитель.Код="00000000020" //Акции не обслуживаются... 
			 или Элемент.Значение.ВидАбонемента.БезЗаморозки тогда //***161025
		Сообщить("Это акционный абонемент его преостанавливать нельзя...");
		Элемент.Значение=Справочники.Абонемент.ПустаяСсылка();
		ЭтотОбъект.ДнейЗапаса=0;
		ЭтотОбъект.ВремяДействия=0;
		ЭтотОбъект.ДатаВозобновления=Дата(1,1,1);
		ЭтотОбъект.ДнейПростоя=0;
		ЭтотОбъект.ДокументОплаты=Документы.ОплатаАбонемента.ПустаяСсылка();
		ЭлементыФормы.НадписьКлиент.Значение=""; //***161025
		ЭтотОбъект.ДатаОстановки=Дата(1,1,1);
		Возврат;
	КонецЕсли;
	ПроверитьАбонемент();
КонецПроцедуры

Процедура ПроверитьАбонемент()
	ЭтотОбъект.Клиент=Абонемент.Клиент;
	//Определеное  дней запаса
	ЭтотОбъект.ДнейЗапаса=ОпределеноеДнейЗапаса(Абонемент);
	//*** проверим сколько раз останавливался абонент за пополнение (!! не более одного)
	// Когда последнее пополнение
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ОплатаАбонемента.Дата КАК Дата,
		|	ОплатаАбонемента.Номер,
		|	ОплатаАбонемента.Абонемент,
		|	ОплатаАбонемента.ВидАбонемента
		|ИЗ
		|	Документ.ОплатаАбонемента КАК ОплатаАбонемента
		|ГДЕ
		|	ОплатаАбонемента.Проведен = ИСТИНА
		|	И ОплатаАбонемента.Дата >= ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, -30)
		|	И ОплатаАбонемента.Абонемент = &Абонемент
		|	И ОплатаАбонемента.Сумма <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата УБЫВ";

	Запрос.УстановитьПараметр("Абонемент", ЭтотОбъект.Абонемент);
	Запрос.УстановитьПараметр("Дата", ЭтотОбъект.Дата);
	Результат = Запрос.Выполнить();
	Если не Результат.Пустой() тогда
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		ОстДата=ВыборкаДетальныеЗаписи.Дата;
	Иначе 
		возврат;
	КонецЕсли;
	
	//Был ли преостановлен за этот преиод абонемент
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПриостановкаАбонемента.Ссылка,
		|	ПриостановкаАбонемента.Номер,
		|	ПриостановкаАбонемента.Дата КАК Дата,
		|	ПриостановкаАбонемента.Проведен,
		|	ПриостановкаАбонемента.Абонемент,
		|	ПриостановкаАбонемента.ДатаОстановки,
		|	ПриостановкаАбонемента.ДатаВозобновления,
		|	ПриостановкаАбонемента.ДнейПростоя,
		|	ПриостановкаАбонемента.ДнейЗапаса,
		|	ПриостановкаАбонемента.ВремяДействия,
		|	ПриостановкаАбонемента.ДокументОплаты
		|ИЗ
		|	Документ.ПриостановкаАбонемента КАК ПриостановкаАбонемента
		|ГДЕ
		|	ПриостановкаАбонемента.Проведен = ИСТИНА
		|	И ПриостановкаАбонемента.Дата >= ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, -31)
		|	И ПриостановкаАбонемента.Абонемент = &Абонемент
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата УБЫВ";

	Запрос.УстановитьПараметр("Абонемент", ЭтотОбъект.Абонемент);
	Запрос.УстановитьПараметр("Дата", ОстДата);
	Результат = Запрос.Выполнить();
	Если не Результат.Пустой() тогда
		Предупреждение("Это абонемент уже был остановлен. "+Символы.ПС+
		"Повторная остановка невозможна!",30,"ВНИМАНИЕ!");
		ЭтотОбъект.Абонемент=Справочники.Абонемент.ПустаяСсылка();
	КонецЕсли;
КонецПроцедуры	
	

Функция ОпределеноеДнейЗапаса(Абонемент)
	ВсегоДней=0;
	Если не ЗначениеЗаполнено(Абонемент) тогда
		Сообщить("Не указан абонемент");
		ЭлементыФормы.Абонемент.Значение=Справочники.Абонемент.ПустаяСсылка();
		ЭлементыФормы.Клиент.Значение=Справочники.ФизическиеЛица.ПустаяСсылка();
		ОбновлениеОтображения();
		Возврат 0;
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВремяДействияАбонементаСрезПоследних.Абонемент,
		|	ВремяДействияАбонементаСрезПоследних.ВидАбонемента,
		|	ВремяДействияАбонементаСрезПоследних.ДатаОкончания,
		|	ВремяДействияАбонементаСрезПоследних.Регистратор
		|ИЗ
		|	РегистрСведений.ВремяДействияАбонемента.СрезПоследних(&Дата, Абонемент = &Абонемент) КАК ВремяДействияАбонементаСрезПоследних
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВремяДействияАбонементаСрезПоследних.ДатаОкончания УБЫВ";

	Запрос.УстановитьПараметр("Абонемент", Абонемент);
	Запрос.УстановитьПараметр("Дата", ЭлементыФормы.ДатаОстановки.Значение);

	Результат = Запрос.Выполнить();
	Если Результат.Пустой() тогда
		Сообщить("Время действия  Абонемента не известно !");
		ЭлементыФормы.Абонемент.Значение=Справочники.Абонемент.ПустаяСсылка();
		ЭлементыФормы.Клиент.Значение=Справочники.ФизическиеЛица.ПустаяСсылка();
		ЭтотОбъект.Клиент=Справочники.ФизическиеЛица.ПустаяСсылка();
		ЭлементыФормы.НадписьКлиент.Значение="";
		ОбновлениеОтображения();
		Возврат 0;
	КонецЕсли;
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	ВыборкаДетальныеЗаписи.Следующий();
	Если КонецДня(ВыборкаДетальныеЗаписи.ДатаОкончания)<= КонецДня(ЭтотОбъект.ДатаОстановки) тогда
		Предупреждение("Время действия  Абонемента завершено!");
		ЭлементыФормы.Абонемент.Значение=Справочники.Абонемент.ПустаяСсылка();
		ЭлементыФормы.Клиент.Значение=Справочники.ФизическиеЛица.ПустаяСсылка();
		ОбновлениеОтображения();
		Возврат 0;
	КонецЕсли;
	ОсталосьДоЗавершения=(1+(НачалоДня(ВыборкаДетальныеЗаписи.ДатаОкончания)-НачалоДня(ЭтотОбъект.ДатаОстановки))/24/3600);
	//для не групповых абонементов
	Если ЭлементыФормы.Абонемент.Значение.ВидАбонемента.Родитель.Код<>"00000000038"
		И ЭлементыФормы.Абонемент.Значение.ВидАбонемента.Родитель.Родитель.Код<>"00000000038" тогда
		Если ОсталосьДоЗавершения<=5 тогда
			Предупреждение("Время действия  Абонемента заканячивается  через "+Формат(ОсталосьДоЗавершения,"ЧДЦ=0; ЧГ=0")+" д. !"+Символы.ПС+
			"Приостановка не возможна!");
			ЭлементыФормы.Абонемент.Значение=Справочники.Абонемент.ПустаяСсылка();
			ЭлементыФормы.Клиент.Значение=Справочники.ФизическиеЛица.ПустаяСсылка();
			ОбновлениеОтображения();
			Возврат 0;
		КонецЕсли;
	КонецЕсли;
	ЭтотОбъект.ВремяДействия	=	ВыборкаДетальныеЗаписи.ДатаОкончания;
	ЭтотОбъект.ДокументОплаты   =   ВыборкаДетальныеЗаписи.Регистратор;
	ВсегоДней=1+(НачалоДня(ВыборкаДетальныеЗаписи.ДатаОкончания)-НачалоДня(ЭтотОбъект.ДатаОстановки))/24/3600;
	возврат  ВсегоДней;
КонецФункции

Процедура ДатаОстановкиПриИзменении(Элемент)
	ЭтотОбъект.ДнейЗапаса=ОпределеноеДнейЗапаса(ЭтотОбъект.Абонемент);
	Если ЗначениеЗаполнено(ЭлементыФормы.ДатаЗавершенияОстановки.Значение) тогда
		 ЭтотОбъект.ДнейПростоя=(1+(НачалоДня(ЭтотОбъект.ДатаВозобновления)-НачалоДня(Элемент.Значения))/24/3600);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДатаЗавершенияОстановкиПриИзменении(Элемент)
	ЭтотОбъект.ДнейПростоя=1+(НачалоДня(Элемент.Значение)-НачалоДня(ЭтотОбъект.ДатаОстановки))/24/3600;
	ГраницаПростоя=?(ЭлементыФормы.Абонемент.Значение.ВидАбонемента.Родитель.Код="00000000038"
		или  ЭлементыФормы.Абонемент.Значение.ВидАбонемента.Родитель.Родитель.Код="00000000038",1,5);
	Если ЭтотОбъект.ДнейПростоя<ГраницаПростоя тогда
		Элемент.Значение=Дата(1,1,1);
		ЭтотОбъект.ДнейПростоя=0;
		Предупреждение("Дней приостановки не может быть меньше "+ГраницаПростоя+" !",30,"ВНИМАНИЕ!");
		возврат;
	КонецЕсли;
КонецПроцедуры

Процедура ДатаПриИзменении(Элемент)
	
КонецПроцедуры

Процедура ДнейПростояПриИзменении(Элемент)
	ГраницаПростоя=?(ЭлементыФормы.Абонемент.Значение.ВидАбонемента.Родитель.Код="00000000038"
		или  ЭлементыФормы.Абонемент.Значение.ВидАбонемента.Родитель.Родитель.Код="00000000038",1,5);
	Если Элемент.Значение<ГраницаПростоя тогда
		ЭлементыФормы.ДатаЗавершенияОстановки.Значение=Дата(1,1,1);
		Элемент.Значение=0;
		Предупреждение("Дней приостановки не может быть меньше "+ГраницаПростоя+" !",30,"ВНИМАНИЕ!");
		возврат;
	КонецЕсли;
	ЭтотОбъект.ДатаВозобновления=НачалоДня(ЭтотОбъект.ДатаОстановки)+(Элемент.Значение-1)*24*3600;
	ЭлементыФормы.ДатаЗавершенияОстановки.Значение=ЭтотОбъект.ДатаВозобновления;
КонецПроцедуры


//*** ОсновнойКаталогФайлов 		= УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ТекущийПользователь, "ОсновнойКаталогФайлов");
мПустаяКартинка = Новый Картинка;