Перем мТекущееОсновноеИзображение;
Перем мПустаяКартинка; 

// Процедура устанавливает в поле картинки основное изображение
//
Процедура ПоказатьОсновноеИзображение()

	Если мТекущееОсновноеИзображение = Неопределено Тогда
		ЭлементыФормы.ОсновноеИзображение.Картинка = мПустаяКартинка;
	Иначе
		ЭлементыФормы.ОсновноеИзображение.Картинка = мТекущееОсновноеИзображение;
	КонецЕсли;

КонецПроцедуры // ПоказатьОсновноеИзображение()

Процедура ПриОткрытии()
 		Если мТекущееОсновноеИзображение <> ЭтотОбъект.Клиент.ОсновноеИзображение.Хранилище.Получить() Тогда
			мТекущееОсновноеИзображение = ЭтотОбъект.Клиент.ОсновноеИзображение.Хранилище.Получить();
			ПоказатьОсновноеИзображение();
		КонецЕсли;
		
		ЖурналПосещений.Отбор.Абонемент.Установить(Ссылка);
		ЭлементыФормы.ЖурналПосещений.НастройкаОтбора.Абонемент.Доступность = Ложь;
		
		ОплатаАбонемента.Отбор.Абонемент.Установить(Ссылка);
		ЭлементыФормы.ОплатаАбонемента.НастройкаОтбора.Абонемент.Доступность = Ложь;
		
		ПриостановкаАбонемента.Отбор.Абонемент.Установить(Ссылка);
		ЭлементыФормы.ПриостановкаАбонемента.НастройкаОтбора.Абонемент.Доступность = Ложь;
		Если ЭтоНовый()  Тогда
			АдминСЗ=ДополнительныеФункции.НайтиСотрудника(Справочники.ДолжностиОрганизаций.НайтиПоКоду("000000004"),"НадписьАдминистратор",ТекущаяДата());
		КонецЕсли; 
КонецПроцедуры

Процедура КлиентПриИзменении(Элемент)
	Если мТекущееОсновноеИзображение <> ЭтотОбъект.Клиент.ОсновноеИзображение.Хранилище.Получить() Тогда
		мТекущееОсновноеИзображение = ЭтотОбъект.Клиент.ОсновноеИзображение.Хранилище.Получить();
		ПоказатьОсновноеИзображение();
	КонецЕсли;
	ФизлицоОбъект=ЭтотОбъект.Клиент.Ссылка;
КонецПроцедуры

Процедура ОбновлениеОтображения()
	ЭлементыФормы.НадписьВидОплатыУслуг.Доступность=Ложь;
	ЭлементыФормы.ВидОплатыУслуг.Доступность=Ложь;
	ЭлементыФормы.АрендаПриОплате.Доступность=Ложь;
	ЭлементыФормы.ОплатитьАрендуЗаТренера.Доступность=Ложь;
	Если ЭлементыФормы.ЯвляетсяТренером.Значение=Истина тогда
		ЭлементыФормы.ПриходящийТренер.Доступность=Ложь;
		ЭлементыФормы.ЦенаТренера.Доступность=Ложь;
		ЭлементыФормы.ПриходящийТренер.Значение=Справочники.Абонемент.ПустаяСсылка();
		ЭлементыФормы.ЦенаТренера.Значение=0;
		ЭлементыФормы.НеобходимТренер.Доступность=Ложь;
		ЭлементыФормы.НеобходимТренер.Значение=Ложь;
	ИначеЕсли ЭлементыФормы.НеобходимТренер.Значение=Истина тогда		
		ЭлементыФормы.ЯвляетсяТренером.Значение=Ложь;
		ЭлементыФормы.ЯвляетсяТренером.Доступность=Ложь;
		ЭлементыФормы.ПриходящийТренер.Значение=Справочники.Абонемент.ПустаяСсылка();
		ЭлементыФормы.ЦенаТренера.Значение=0;
		ЭлементыФормы.ПриходящийТренер.Доступность=Ложь;
		ЭлементыФормы.ЦенаТренера.Доступность=Ложь;
	ИначеЕсли ЗначениеЗаполнено(ЭлементыФормы.ПриходящийТренер.Значение) тогда				
		ЭлементыФормы.ЯвляетсяТренером.Значение=Ложь;
		ЭлементыФормы.ЯвляетсяТренером.Доступность=Ложь;
		ЭлементыФормы.НеобходимТренер.Доступность=Ложь;
		ЭлементыФормы.НеобходимТренер.Значение=Ложь;
		ЭлементыФормы.ЦенаТренера.Доступность=Истина;
		ЭлементыФормы.НадписьВидОплатыУслуг.Доступность=Истина;
		ЭлементыФормы.ВидОплатыУслуг.Доступность=Истина;
		ЭлементыФормы.АрендаПриОплате.Доступность=Истина;
		ЭлементыФормы.ОплатитьАрендуЗаТренера.Доступность=(ЭтотОбъект.ВидОплатыУслуг=Перечисления.ВидОплатыУслуг.Аренда);
	Иначе
		ЭлементыФормы.ЯвляетсяТренером.Доступность	=	Истина;
		ЭлементыФормы.НеобходимТренер.Доступность	=	Истина;
		ЭлементыФормы.ПриходящийТренер.Доступность	=	Истина;
		ЭлементыФормы.ЦенаТренера.Доступность=Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЭлементыФормы.Клиент.Значение) Тогда
		ЭлементыФормы.Пол.Значение="Пол   "+ЭлементыФормы.Клиент.Значение.Пол; 
	КонецЕсли; 
	Если мТекущееОсновноеИзображение <> ЭтотОбъект.Клиент.ОсновноеИзображение.Хранилище.Получить() Тогда
		мТекущееОсновноеИзображение = ЭтотОбъект.Клиент.ОсновноеИзображение.Хранилище.Получить();
		ПоказатьОсновноеИзображение();
	КонецЕсли;
	Если ЭлементыФормы.ВидАбонемента.Значение.Родитель.Код="00000000038" или 
		ЭлементыФормы.ВидАбонемента.Значение.Родитель.Родитель.Код="00000000038" тогда
		ЭлементыФормы.ГрупповоеЗанятие.Доступность=Истина;
		ЭлементыФормы.ГрупповоеЗанятие.ОтметкаНезаполненного=(ЭлементыФормы.ГрупповоеЗанятие.Значение=Справочники.ГрупповыеЗанятия.ПустаяСсылка());
	Иначе	
		ЭлементыФормы.ГрупповоеЗанятие.Доступность=ложь;
		ЭлементыФормы.ГрупповоеЗанятие.ОтметкаНезаполненного=Ложь;
	КонецЕсли;
//***170225	
	Если ЭлементыФормы.ВидАбонемента.Значение.БезЗаморозки=Истина или 
		ЭтотОбъект.ВидАбонемента.БезЗаморозки=Истина Тогда 
		ЭлементыФормы.КнопкаПриостановкаКарточки.Доступность=Ложь;
	Иначе 
		ЭлементыФормы.КнопкаПриостановкаКарточки.Доступность=Истина;
	КонецЕсли;
	
	
	
КонецПроцедуры

Процедура ОсновноеИзображениеНажатие(Элемент)
	
КонецПроцедуры

Процедура ПриИзмененииДанных()
	ФизлицоОбъект=ЭтотОбъект.Клиент.Ссылка;
КонецПроцедуры

Процедура ВидАбонементаНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	              |	Номенклатура.Ссылка
	              |ИЗ
	              |	Справочник.Номенклатура КАК Номенклатура
	              |ГДЕ
	              |	Номенклатура.ПометкаУдаления = ЛОЖЬ
	              |	И Номенклатура.ВидНоменклатуры = &ВидНоменклатуры
	              |	И (Номенклатура.Родитель = &Родитель ИЛИ Номенклатура.Родитель.Родитель = &Родитель ИЛИ Номенклатура.Родитель.Родитель.Родитель = &Родитель)";
    Запрос.УстановитьПараметр("ВидНоменклатуры",Справочники.ВидыНоменклатуры.НайтиПоКоду("000000001"));
	Запрос.УстановитьПараметр("Родитель",Справочники.Номенклатура.НайтиПоКоду("00000000001"));
	Результат = Запрос.Выполнить();

	Список = Новый СписокЗначений;
	Список.ЗагрузитьЗначения(Результат.Выгрузить().ВыгрузитьКолонку("Ссылка"));
	МФ= Справочники.Номенклатура.ПолучитьФормуВыбора("ФормаВыбора"); 
	МФ.Отбор.Ссылка.ВидСравнения=	ВидСравнения.ВСписке;
	МФ.Отбор.Ссылка.Значение	 =	Список;
	МФ.Отбор.Ссылка.Использование = Истина;
	МФ.ЗакрыватьПриВыборе=Истина;
	МФ.ЗакрыватьПриЗакрытииВладельца=Истина;
	МФ.ЭлементыФормы.СправочникСписок.ИерархическийПросмотр=Истина;
	МФ.ЭлементыФормы.СправочникСписок.ТекущаяСтрока=?(ЗначениеЗаполнено(Элемент.Значение), Элемент.Значение,Справочники.Номенклатура.НайтиПоКоду("00000000002"));
	МФ.ЭлементыФормы.СправочникДерево.ТекущаяСтрока=?(ЗначениеЗаполнено(Элемент.Значение), Элемент.Значение.Родитель,Справочники.Номенклатура.НайтиПоКоду("00000000001"));
	мАбонемент=МФ.ОткрытьМодально();
	Элемент.Значение=мАбонемент;
	Если Элемент.Значение.Родитель.Код<>"00000000038" И
		Элемент.Значение.Родитель.Родитель.Код<>"00000000038" тогда
		ЭлементыФормы.ГрупповоеЗанятие.Значение=Справочники.ГрупповыеЗанятия.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

Процедура КлиентНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	Если не ЗначениеЗаполнено(Элемент.Значение) и ЭтоНовый() тогда
		 эКли=Справочники.ФизическиеЛица.СоздатьЭлемент();
		 оКли=эКли.ПолучитьФорму("ФормаЭлемента");	
		 оКли.ОткрытьМодально();
		 Элемент.Значение=мНовФЛ;
	Иначе // выбрать
		Запрос = Новый Запрос;
		Запрос.Текст ="ВЫБРАТЬ
		|	ФизическиеЛица.Ссылка
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|ГДЕ
		|	ФизическиеЛица.ПометкаУдаления = ЛОЖЬ
		//|	И ФизическиеЛица.Родитель <> &Родитель
		|	И ФизическиеЛица.ЭтоГруппа = ЛОЖЬ
		|	И ФизическиеЛица.Родитель = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)";
		Запрос.УстановитьПараметр("Родитель",Справочники.Номенклатура.НайтиПоКоду("000000007"));
		Результат = Запрос.Выполнить();
		
		Список = Новый СписокЗначений;
		Список.ЗагрузитьЗначения(Результат.Выгрузить().ВыгрузитьКолонку("Ссылка"));
		МФ= Справочники.ФизическиеЛица.ПолучитьФормуВыбора("ФормаВыбора"); 
		МФ.Отбор.Ссылка.ВидСравнения=	ВидСравнения.ВСписке;
		МФ.Отбор.Ссылка.Значение	 =	Список;
		МФ.Отбор.Ссылка.Использование = Истина;
		МФ.ЗакрыватьПриВыборе=Истина;
		МФ.ЗакрыватьПриЗакрытииВладельца=Истина;
		МФ.ЭлементыФормы.СправочникСписок.ИерархическийПросмотр=Ложь;
		Если ЗначениеЗаполнено(Элемент.Значение) тогда
			МФ.ЭлементыФормы.СправочникСписок.ТекущаяСтрока=Элемент.Значение;
		КонецЕсли;
		Элемент.Значение=МФ.ОткрытьМодально();
	КонецЕсли;
КонецПроцедуры

Процедура ПриходящийТренерНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ РАЗЛИЧНЫЕ
	              |	Абонемент.Клиент.Ссылка КАК Ссылка
	              |ИЗ
	              |	Справочник.Абонемент КАК Абонемент
	              |ГДЕ
	              |	Абонемент.ПометкаУдаления = ЛОЖЬ
	              |	И Абонемент.ЯвляетсяТренером = ИСТИНА
	              |
	              |ОБЪЕДИНИТЬ ВСЕ
	              |
	              |ВЫБРАТЬ
	              |	ФизическиеЛица.Ссылка
	              |ИЗ
	              |	Справочник.ФизическиеЛица КАК ФизическиеЛица
	              |ГДЕ
	              |	ФизическиеЛица.Должность.Код = ""000000007""
	              |	И ФизическиеЛица.ПометкаУдаления = ЛОЖЬ";
	Результат = Запрос.Выполнить();
	Список = Новый СписокЗначений;
	Список.ЗагрузитьЗначения(Результат.Выгрузить().ВыгрузитьКолонку("Ссылка"));
	МФ= Справочники.ФизическиеЛица.ПолучитьФормуВыбора("ФормаВыбора"); 
	МФ.Отбор.Ссылка.ВидСравнения=	ВидСравнения.ВСписке;
	МФ.Отбор.Ссылка.Значение	 =	Список;
	МФ.Отбор.Ссылка.Использование = Истина;
	МФ.ЗакрыватьПриВыборе=Истина;
	МФ.ЗакрыватьПриЗакрытииВладельца=Истина;
	МФ.ВладелецФормы=ЭтаФорма;
	МФ.ЭлементыФормы.СправочникСписок.ИерархическийПросмотр=Ложь;
	Элемент.Значение=МФ.ОткрытьМодально();
	Если ЗначениеЗаполнено(Элемент.Значение)  Тогда
		ЭтотОбъект.ЦенаТренера=Ценообразование.ПолучитьЦенуНоменклатуры(Справочники.Номенклатура.НайтиПоКоду("00000000029"),Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка(),Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("000000003"),ТекущаяДата(),,,1);		
	Иначе 
		ЭтотОбъект.ЦенаТренера=0;
	КонецЕсли; 
	Если ЗначениеЗаполнено(Элемент.Значение)  Тогда
		АрендаПриОплате=Ложь;
		ВидОплатыУслуг=Перечисления.ВидОплатыУслуг.Процент;
	КонецЕсли;  
КонецПроцедуры

Процедура ВидАбонементаПриИзменении(Элемент)
 	Если Элемент.Значение.ЭтоГруппа тогда
		 Элемент.Значение=Справочники.Абонемент.ПустаяСсылка();
	КонецЕсли;
	Если Элемент.Значение.Родитель.Код<>"00000000038" И
		Элемент.Значение.Родитель.Родитель.Код<>"00000000038" тогда
		ЭлементыФормы.ГрупповоеЗанятие.Значение=Справочники.ГрупповыеЗанятия.ПустаяСсылка();
	КонецЕсли;
	Если Элемент.Значение.Родитель.Код="00000000038" ИЛИ
		Элемент.Значение.Родитель.Родитель.Код="00000000038" тогда
		ЭтаФорма.ТекущийЭлемент=ЭлементыФормы.ГрупповоеЗанятие;
	КонецЕсли;
КонецПроцедуры

Процедура ПриЗакрытии()
	
КонецПроцедуры

Процедура КнопкаОплатыСменыКарточкиНажатие(Элемент)
мДок=Документы.ПродажиСпортзал.СоздатьДокумент();
мДок.Дата=ТекущаяДата();
мДок.Комментарий="Замена карточки "+СокрЛП(ЭтотОбъект.Клиент.Наименование) +   " С "+ЭтотОбъект.Наименование +"  по ";
мДок.ТипЦен=Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("000000002");
мСтр=мДок.Товары.Добавить();
мСтр.Количество=1;
мСтр.Номенклатура=Справочники.Номенклатура.НайтиПоКоду("00000000027");
мСтр.ЕдиницаИзмерения=мСтр.Номенклатура.ЕдиницаХраненияОстатков;
мСтр.Цена			 =Ценообразование.ПолучитьЦенуНоменклатуры(мСтр.Номенклатура, 
				Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка(), 
					мДок.ТипЦен, 
						мДок.Дата, 
							мСтр.Номенклатура.ЕдиницаХраненияОстатков, 
								Справочники.Валюты.НайтиПоКоду("980"));
							
мСтр.Сумма=мСтр.Цена;
мДок.ПолучитьФорму("ФормаДокумента").Открыть();

КонецПроцедуры

Процедура КлиентОткрытие(Элемент, СтандартнаяОбработка)
	Если не ЗначениеЗаполнено(Элемент.Значение) и ЭтоНовый() тогда
		 СтандартнаяОбработка=Ложь;
		 эКли=Справочники.ФизическиеЛица.СоздатьЭлемент();
		 оКли=эКли.ПолучитьФорму("ФормаЭлемента");	
		 оКли.ОткрытьМодально();
		 Элемент.Значение=мНовФЛ;
	КонецЕсли;
КонецПроцедуры

Процедура ГрупповоеЗанятиеНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	              |	ГрупповыеЗанятия.Ссылка
	              |ИЗ
	              |	Справочник.ГрупповыеЗанятия КАК ГрупповыеЗанятия
	              |ГДЕ
	              |	ГрупповыеЗанятия.ПометкаУдаления = ЛОЖЬ
	              |	И ГрупповыеЗанятия.Активность = ИСТИНА";
	Результат = Запрос.Выполнить();

	Список = Новый СписокЗначений;
	Список.ЗагрузитьЗначения(Результат.Выгрузить().ВыгрузитьКолонку("Ссылка"));
	МФ= Справочники.ГрупповыеЗанятия.ПолучитьФормуВыбора("ФормаСписка"); 
	МФ.Отбор.Ссылка.ВидСравнения=	ВидСравнения.ВСписке;
	МФ.Отбор.Ссылка.Значение	 =	Список;
	МФ.Отбор.Ссылка.Использование = Истина;
	МФ.ЗакрыватьПриВыборе=Истина;
	МФ.ЗакрыватьПриЗакрытииВладельца=Истина;
	МФ.ЭлементыФормы.СправочникСписок.ИерархическийПросмотр=Ложь;
	Элемент.Значение=МФ.ОткрытьМодально();
КонецПроцедуры

Процедура ВидАбонементаОчистка(Элемент, СтандартнаяОбработка)
	ЭлементыФормы.ГрупповоеЗанятие.Значение=Справочники.ГрупповыеЗанятия.ПустаяСсылка();
КонецПроцедуры

Процедура ПриходящийТренерОчистка(Элемент, СтандартнаяОбработка)
	ЭтотОбъект.ЦенаТренера=0;
	АрендаПриОплате=Ложь;
	ВидОплатыУслуг=Перечисления.ВидОплатыУслуг.ПустаяСсылка();
КонецПроцедуры

Процедура КнопкаПриостановкаКарточкиНажатие(Элемент)
	Если ЭтотОбъект.Ссылка.ВидАбонемента.Родитель.Код="00000000020" тогда //Акции не обслуживаются... 
			Сообщить("Это акционный абонемент его преостанавливать нельзя...");
		Возврат;
	КонецЕсли;
	мДок=Документы.ПриостановкаАбонемента.ПолучитьФорму("ФормаДокумента");
	мДок.Дата			=ТекущаяДата();
    мДок.ВладелецФормы  = ЭтаФорма ;
	мДок.ЗакрыватьПриЗакрытииВладельца=Истина;
	мДок.ИзменятьСпособОтображенияОкна=ИзменениеСпособаОтображенияОкна.Авто;
	мДок.ИзменениеРазмера=ИзменениеРазмераОкна.Изменять;
	мДок.СпособОтображенияОкна=ВариантСпособаОтображенияОкна.Минимизированное;
	мДок.Абонемент	= ЭтотОбъект.Ссылка;
	мДок.ОткрытьМодально();
КонецПроцедуры

Процедура КнопкаОплатыНажатие(Элемент)
	мДок=Документы.ОплатаАбонемента.ПолучитьФорму("ФормаДокумента");
	мДок.Дата			= ТекущаяДата();
	мДок.Подразделение	= УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновноеПодразделение");
	мДок.Организация	= УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
	мДок.Касса			= УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяКасса");
	мДок.Ответственный	=глЗначениеПеременной("глТекущийПользователь");
    мДок.ВладелецФормы  = ЭтаФорма ;
	мДок.ЗакрыватьПриЗакрытииВладельца=Истина;
	мДок.ИзменятьСпособОтображенияОкна=ИзменениеСпособаОтображенияОкна.Авто;
	мДок.ИзменениеРазмера=ИзменениеРазмераОкна.Изменять;
	мДок.СпособОтображенияОкна=ВариантСпособаОтображенияОкна.Минимизированное;
	мДок.ТипЦены		=Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("000000001");	
	мДок.Абонемент		=Ссылка;
	мДок.Клиент			=Ссылка.Клиент; 
	мДок.ВидАбонемента	=Ссылка.ВидАбонемента;
	мДок.ОткрытьМодально();	
КонецПроцедуры

Процедура ПриходящийТренерПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ЭлементыФормы.ПриходящийТренер.Значение) Тогда
		АрендаПриОплате=Ложь;
		ВидОплатыУслуг=Перечисления.ВидОплатыУслуг.Процент;
	КонецЕсли; 
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	Если не ЗначениеЗаполнено(ЭлементыФормы.ПриходящийТренер.Значение) Тогда
	    АрендаПриОплате=Ложь;
		ВидОплатыУслуг=Перечисления.ВидОплатыУслуг.ПустаяСсылка();
	КонецЕсли; 
КонецПроцедуры

Процедура ВидОплатыУслугПриИзменении(Элемент)
	Если Элемент.Значение=Перечисления.ВидОплатыУслуг.Аренда Тогда
	    Предупреждение("Вид оплаты АРЕНДА возможен только при оплате абонемента!!!",30,"Внимание!");
		Элемент.Значение=Перечисления.ВидОплатыУслуг.Процент;
	ИначеЕсли не ЗначениеЗаполнено(Элемент.Значение)  Тогда 	
		Элемент.Значение=Перечисления.ВидОплатыУслуг.Процент;
	КонецЕсли; 
	мр=РегистрыСведений.ЖурналПереводаВАренду.СоздатьМенеджерЗаписи();
	мр.Абонемент      = Ссылка;
	мр.ВидАбонемента  = мр.Абонемент.ВидАбонемента;
	мр.АрендаПриОплате= ЭлементыФормы.АрендаПриОплате.Значение;
	мр.ВидОплатыУслуг = Элемент.Значение;
	мр.Период		  = ТекущаяДата();
	мр.Записать(Истина);
	
КонецПроцедуры

Процедура АрендаПриОплатеПриИзменении(Элемент)
	//Если Элемент.Значение  Тогда
	////   ЭлементыФормы.Комментарий.Значение=ЭлементыФормы.Комментарий.Значение+" Аренду вкл. "+ТекущаяДата()+". ";
	//Иначе	
	////   ЭлементыФормы.Комментарий.Значение=ЭлементыФормы.Комментарий.Значение+" Аренду выкл. "+ТекущаяДата()+". ";
	//КонецЕсли; 
	мр=РегистрыСведений.ЖурналПереводаВАренду.СоздатьМенеджерЗаписи();
	мр.Абонемент      = Ссылка;
	мр.ВидАбонемента  = мр.Абонемент.ВидАбонемента;
	мр.АрендаПриОплате= Элемент.Значение;
	мр.ВидОплатыУслуг = ЭлементыФормы.ВидОплатыУслуг.Значение;
	мр.Период		  = ТекущаяДата();
	мр.Записать(Истина);
КонецПроцедуры

Процедура ОплатитьАрендуЗаТренераНажатие(Элемент)
	ПараметрыФормы = Новый Структура("Основание", ЭтотОбъект.Ссылка);
	ОткрытьФорму("Документ.ПриходныйКассовыйОрдер.ФормаОбъекта", ПараметрыФормы);
КонецПроцедуры

//*** ОсновнойКаталогФайлов 		= УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ТекущийПользователь, "ОсновнойКаталогФайлов");
мПустаяКартинка = Новый Картинка;
