Перем мТекущееОсновноеИзображение;
Перем мПустаяКартинка;
Перем мПол Экспорт;

Процедура КнопкаВыполнитьНажатие(Кнопка)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ПриОткрытии()
		//ЭтаФорма.ЭлементыФормы.ДеньТек.Значение=Перечисления.ДниНедели[ДЕНЬНЕДЕЛИ(ТекущаяДата())-1];
		ЭтотОбъект.Дата=ТекущаяДата();
		ЭтотОбъект.Подразделение= УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновноеПодразделение");
		ЭтотОбъект.Организация	= УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
		ЭтотОбъект.Касса		= УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяКасса");
        ЭтаФорма.ПодключитьОбработчикОжидания("Обновление", 1, Ложь);
		//*** 
		мСотрудник=ДополнительныеФункции.НайтиСотрудника(Справочники.ДолжностиОрганизаций.НайтиПоКоду("000000004"),"НадписьАдминистратор",ТекущаяДата());
		ЭтаФорма.ЭлементыФормы.НадписьАдминистратор.Значение=""+?(ЗначениеЗаполнено(мСотрудник),мСотрудник,"..");
		мСотрудник1=ДополнительныеФункции.НайтиСотрудника(Справочники.ДолжностиОрганизаций.НайтиПоКоду("000000005"),"НадписьТренер",ТекущаяДата());
		ЭтаФорма.ЭлементыФормы.НадписьТренер.Значение		=""+?(ЗначениеЗаполнено(мСотрудник1),мСотрудник1,"..");
		мСотрудник2=ДополнительныеФункции.НайтиСотрудника(Справочники.ДолжностиОрганизаций.НайтиПоКоду("000000004"),"НадписьАдминистратор1",ТекущаяДата());
		ЭтаФорма.ЭлементыФормы.НадписьАдминистратор1.Значение=""+?(ЗначениеЗаполнено(мСотрудник2),мСотрудник2,"..");
		ОбновитьЖурнал();
		ЭлементыФормы.Абонемент.АктивизироватьПоУмолчанию=Истина;
		ЭлементыФормы.Посещения.НастройкаОтбора.ДатаВход.Доступность=Ложь;
		ЭтаФорма.ТекущийЭлемент=ЭлементыФормы.Абонемент;
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	Если РольДоступна("РабочийСтол") Тогда
			Ответ = Вопрос("Завершить работу с программой?", РежимДиалогаВопрос.ДаНет);
			Отказ = (Ответ = КодВозвратаДиалога.Нет);
			Если не Отказ Тогда
				ЗавершитьРаботуСистемы(Ложь);
			КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

Процедура ОбновлениеОтображения()
	ОтчетныйМесяц=Формат(ТекущаяДата(),"ДФ=MMMM");
	ОтчетныйМесяц=?(Прав(СокрЛП(ОтчетныйМесяц),1)="ь",СтрЗаменить(СокрЛП(ОтчетныйМесяц),"ь","я"),
	?(Прав(ОтчетныйМесяц,1)="т",СокрЛП(ОтчетныйМесяц)+"а",?(Прав(СокрЛП(ОтчетныйМесяц),1)="й",СтрЗаменить(СокрЛП(ОтчетныйМесяц),"й","я"),"")));
	ЭтаФорма.ЭлементыФормы.ДеньТек.Значение=ТРег(Перечисления.ДниНедели[ДЕНЬНЕДЕЛИ(ТекущаяДата())-1])+" "+Формат(ТекущаяДата(),"ДФ=dd.MM.yy");
	Если СтрДлина(СокрЛП(ЭтаФорма.ЭлементыФормы.НадписьТренер.Значение))>=3 тогда
		ЭтаФорма.ЭлементыФормы.НадписьТренер.БегущаяСтрока=РежимБегущейСтроки.НеИспользовать;
	иначе		
		ЭтаФорма.ЭлементыФормы.НадписьТренер.БегущаяСтрока=РежимБегущейСтроки.Быстро;
	КонецЕсли;
	Если СтрДлина(СокрЛП(ЭтаФорма.ЭлементыФормы.НадписьАдминистратор.Значение))>=3 тогда
		ЭтаФорма.ЭлементыФормы.НадписьАдминистратор.БегущаяСтрока=РежимБегущейСтроки.НеИспользовать;
	иначе		
		ЭтаФорма.ЭлементыФормы.НадписьАдминистратор.БегущаяСтрока=РежимБегущейСтроки.Быстро;
	КонецЕсли;
	Если СтрДлина(СокрЛП(ЭтаФорма.ЭлементыФормы.НадписьАдминистратор1.Значение))>=3 тогда
		ЭтаФорма.ЭлементыФормы.НадписьАдминистратор1.БегущаяСтрока=РежимБегущейСтроки.НеИспользовать;
	иначе		
		ЭтаФорма.ЭлементыФормы.НадписьАдминистратор1.БегущаяСтрока=РежимБегущейСтроки.Быстро;
	КонецЕсли;
	
	ПодсчитатьКоличество();
	
КонецПроцедуры

Процедура Обновление() Экспорт
	ЭтаФорма.ЭлементыФормы.ВремяТек.Значение=Формат(ТекущаяДата(),"ДЛФ=T");	
	//ЭлементыФормы.ЖурналПосещений.ОбновитьСтроки();
КонецПроцедуры

Процедура НадписьАдминистраторНажатие(Элемент)
	Должность=Справочники.ДолжностиОрганизаций.НайтиПоКоду("000000004");
	ИзменитьСотрудникаНаДолжности(Должность,"НадписьАдминистратор");
КонецПроцедуры

Процедура ИзменитьСотрудникаНаДолжности(Должность,Поле)
	ИзменитьСотрудникаВСмене(Должность,Поле);
	лСотрудник=ДополнительныеФункции.НайтиСотрудника(Должность,Поле,ТекущаяДата());
	ЭтаФорма.ЭлементыФормы[Поле].Значение=""+?(ЗначениеЗаполнено(лСотрудник),лСотрудник,".");
КонецПроцедуры

Процедура НадписьТренерНажатие(Элемент)
	Должность=Справочники.ДолжностиОрганизаций.НайтиПоКоду("000000005");
	ИзменитьСотрудникаНаДолжности(Должность,"НадписьТренер");
КонецПроцедуры

Процедура ИзменитьСотрудникаВСмене(Должность,Поле)
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	              |	ФизическиеЛица.Ссылка
	              |ИЗ
	              |	Справочник.ФизическиеЛица КАК ФизическиеЛица
	              |ГДЕ
	              |	ФизическиеЛица.ПометкаУдаления = ЛОЖЬ
	              |	И ФизическиеЛица.Должность = &Должность";
    Запрос.УстановитьПараметр("Должность",Должность);
	Результат = Запрос.Выполнить();

	Список = Новый СписокЗначений;
	Список.ЗагрузитьЗначения(Результат.Выгрузить().ВыгрузитьКолонку("Ссылка"));
	МФ= Справочники.ФизическиеЛица.ПолучитьФормуВыбора("ФормаВыбора"); 
	МФ.Отбор.Ссылка.ВидСравнения=	ВидСравнения.ВСписке;
	МФ.Отбор.Ссылка.Значение	 =	Список;
	МФ.Отбор.Ссылка.Использование = Истина;
	МФ.ЗакрыватьПриВыборе=Истина;
	МФ.ЗакрыватьПриЗакрытииВладельца=Истина;
	МФ.ЭлементыФормы.СправочникСписок.ИерархическийПросмотр=Ложь;
	мСотрудник=МФ.ОткрытьМодально();
	Если ЗначениеЗаполнено(мСотрудник) Тогда
	   	ДополнительныеФункции.ЗаписатьСотрудникаВСмену(мСотрудник,Должность,Поле);
	Иначе	
		ДополнительныеФункции.УбратьСотрудникаСоСмены(мСотрудник,Должность,Поле);
	КонецЕсли; 
КонецПроцедуры

Процедура АбонементПриИзменении(Элемент)
	//*** найти движение предыдущее
	Если не ЗначениеЗаполнено(Элемент.Значение) тогда
		ЭтаФорма.Абонемент=Справочники.Абонемент.ПустаяСсылка();
		ЭтаФорма.ТекущийЭлемент=ЭлементыФормы.Абонемент;
		возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЖурналПосещений.Абонемент,
		|	ЖурналПосещений.ДатаВход,
		|	ЖурналПосещений.ДатаВыход,
		|	ЖурналПосещений.Ящик,
		|	ЖурналПосещений.Период КАК Период
		|ИЗ
		|	РегистрСведений.ЖурналПосещений КАК ЖурналПосещений
		|ГДЕ
		|	ЖурналПосещений.Абонемент = &Абонемент
		|	И ЖурналПосещений.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ) И КОНЕЦПЕРИОДА(&Дата, ДЕНЬ)
		|   И ЖурналПосещений.ДатаВыход=ДатаВремя(1,1,1)
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";

	Запрос.УстановитьПараметр("Абонемент", Элемент.Значение);
	Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	Результат = Запрос.Выполнить();
	//ВЯщикеМногоАбонементов=Ложь;
	ЭтоВход=Ложь;
    Если не Результат.Пустой() Тогда
	   	ВыборкаДетальныеЗаписи = Результат.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		ЭтоВход=Ложь;
		//определим ящик и перечень абонентов в ящике
		ТекЯщик=ВыборкаДетальныеЗаписи.Ящик;
	Иначе
		ЭтоВход=Истина;
	КонецЕсли; 
	
	Если  ЭтоВход тогда
		  //Посчитать количество оставшихся дней
		  //Проверить Время 
		  СтруктураОплатыАб=ДополнительныеФункции.РасчетОставшихсяДней(Элемент.Значение);
		  КолДней=?(Элемент.Значение.ВидАбонемента.Родитель.Код="00000000019" ,99,СтруктураОплатыАб.КолДней);
		  Если СтруктураОплатыАб.ДатаНачала>ТекущаяДата() тогда
		  	  Предупреждение("Дата действия абонемента с "+ Формат(СтруктураОплатыАб.ДатаНачала,"ДЛФ=DD" )+ " "+Символы.ПС+
			  "Вход не возможен!",30,"Внимание!");
			  ЭтаФорма.Абонемент=Справочники.Абонемент.ПустаяСсылка();
			  ЭтаФорма.ТекущийЭлемент=ЭлементыФормы.Абонемент;
			 возврат; 
		  КонецЕсли;
		  //***Это групповые занятия
		  Если Элемент.Значение.ВидАбонемента.Родитель.Код="00000000038" тогда
			  ОстатокПосещений=СтруктураОплатыАб.ОстатокПосещений;
			  Если ОстатокПосещений<=0 тогда
					Предупреждение("Количество оплаченных групповых занятий истекло!"+Символы.ПС+
					"Вход не возможен!",30,"Внимание!");
					ЭтаФорма.Абонемент=Справочники.Абонемент.ПустаяСсылка();
					ЭтаФорма.ТекущийЭлемент=ЭлементыФормы.Абонемент;
				  возврат; 
			  КонецЕсли;			  
				//*** Проверим день 		
				ТекДень=ДеньНедели(ТекущаяДата())-1;
				Если не Элемент.Значение.ГрупповоеЗанятие["Дн_"+Формат(ТекДень,"ЧЦ=1; ЧН=0")] тогда
					Предупреждение("Групповой абонемента не на сегодня !"+Символы.ПС+
					"Вход не возможен!",30,"Внимание!");
					ЭтаФорма.Абонемент=Справочники.Абонемент.ПустаяСсылка();
					ЭтаФорма.ТекущийЭлемент=ЭлементыФормы.Абонемент;
					возврат; 
				КонецЕсли;
				
				ВрНач=Элемент.Значение.ГрупповоеЗанятие["ВремяНачала_"+Формат(ТекДень,"ЧЦ=1; ЧН=0")];
				КонтрольВремениНачала	=Дата(Год(ТекущаяДата()),Месяц(ТекущаяДата()),День(ТекущаяДата()),Час(ВрНач),Минута(ВрНач),Секунда(ВрНач));
				ВрДлит=Час(Элемент.Значение.ГрупповоеЗанятие.Продолжительность)*3600+Минута(Элемент.Значение.ГрупповоеЗанятие.Продолжительность)*60+Секунда(Элемент.Значение.ГрупповоеЗанятие.Продолжительность);
				КонтрольВремениОкончания=КонтрольВремениНачала+ВрДлит;
				Если не Элемент.Значение.ГрупповоеЗанятие["Дн_"+Формат(ТекДень,"ЧЦ=1; ЧН=0")] тогда
					Предупреждение("Групповой абонемента на другой день !"+Символы.ПС+
					"Вход не возможен!",30,"Внимание!");
					ЭтаФорма.Абонемент=Справочники.Абонемент.ПустаяСсылка();
					ЭтаФорма.ТекущийЭлемент=ЭлементыФормы.Абонемент;
					возврат; 
				КонецЕсли;
				      
				Если (КонтрольВремениНачала-ТекущаяДата())>30*60 или
					 (ТекущаяДата()-КонтрольВремениНачала)>30*60      //*** И.С. 171011 вход за 30 мин. возможен и через 30 мин после начала
					тогда //*** вход за 30 мин. возможен и через 15 мин после начала
					Предупреждение("Групповой абонемент действителен с "+Час(ВрНач)+":"+Формат(Минута(ВрНач),"ЧЦ=2; ЧН=00")+ Символы.ПС+
					"Вход не возможен!",30,"Внимание!");
					ЭтаФорма.Абонемент=Справочники.Абонемент.ПустаяСсылка();
					ЭтаФорма.ТекущийЭлемент=ЭлементыФормы.Абонемент;
					возврат; 
				КонецЕсли;
			КонецЕсли;//***проверка группового абонемента		
		//ДокЗаморозки=ДополнительныеФункции.АбонементЗаморожен(Элемент.Значение);
		//Если КолДней<0 И ДокЗаморозки<>неопределено тогда 	//проверить на заморозку
		//		Ответ = Вопрос("Абонемент "+СокрЛП(Абонемент.Наименование)+" заморожен."+Символы.ПС+
		//		"Начать действие Абонемента?", РежимДиалогаВопрос.ДаНет);
		//		Сообщить("Документ заморозки Абонемента "+Элемент.Значение+" - "+ДокЗаморозки);
		//		Если Ответ = КодВозвратаДиалога.Да тогда
		//			мДок=Документы.ПриостановкаАбонемента.НайтиПоНомеру(ДокЗаморозки.Номер).ПолучитьОбъект();
		//			мДок.ДатаВозобновления=ТекущаяДата();
		//			мДок.ДнейПростоя=1+(НачалоДня(мДок.ДатаВозобновления)-НачалоДня(мДок.ДатаОстановки))/24/3600;
		//			мДок.Записать(РежимЗаписиДокумента.Проведение);
		//		КонецЕсли; 
		//		СтруктураОплатыАб=ДополнительныеФункции.РасчетОставшихсяДней(Элемент.Значение);
		//		КолДней=?(Элемент.Значение.ВидАбонемента.Родитель.Код="00000000019" ,99,СтруктураОплатыАб.КолДней);
		//КонецЕсли;
		Если КолДней<0 Тогда 
			//проверить на заморозку //*** 160317
			ЗапросОстановок=новый Запрос;
			ЗапросОстановок.Текст="ВЫБРАТЬ
			|	ЖурналОстановокСрезПоследних.Период,
			|	ЖурналОстановокСрезПоследних.Регистратор КАК Док,
			|	ЖурналОстановокСрезПоследних.НомерСтроки,
			|	ЖурналОстановокСрезПоследних.Активность,
			|	ЖурналОстановокСрезПоследних.Абонемент,
			|	ЖурналОстановокСрезПоследних.ДатаОстановки,
			|	ЖурналОстановокСрезПоследних.ДатаВозобновления,
			|	ЖурналОстановокСрезПоследних.КоличествоДней,
			|	ЖурналОстановокСрезПоследних.ВидАбонемента
			|ИЗ
			|	РегистрСведений.ЖурналОстановок.СрезПоследних(
			|			&Дата,
			|			Абонемент = &Абонемент
			|				И ДатаВозобновления = ДАТАВРЕМЯ(1, 1, 1)) КАК ЖурналОстановокСрезПоследних";
			
			ЗапросОстановок.УстановитьПараметр("Дата",ТекущаяДата());
			ЗапросОстановок.УстановитьПараметр("Абонемент",Элемент.Значение);
			рЗапросОстановок=ЗапросОстановок.Выполнить();
			Если не рЗапросОстановок.Пустой() тогда
				выборка=рЗапросОстановок.Выбрать();
				выборка.Следующий();
				Предупреждение("Действие абонемента приостановлено "+Символы.ПС+
				" док. № "+выборка.Док.Номер+" от "+Формат(выборка.Док.Дата,"ДФ=dd.MM.yyyy"));
				
				ЭтаФорма.Абонемент=Справочники.Абонемент.ПустаяСсылка();
				ЭтаФорма.ТекущийЭлемент=ЭлементыФормы.Абонемент;
				Сообщить("Действие абонемента "+СокрЛП(Элемент.Значение.Наименование)+" приостановлено  док. № "+выборка.Док.Номер+" от "+Формат(выборка.Док.Дата,"ДФ=dd.MM.yyyy"));
				возврат;//1231235918184
			КонецЕсли; 
			//проверить на заморозку //*** 160317
			
			ЦенаАбонемента=Ценообразование.ПолучитьЦенуНоменклатуры(Элемент.Значение.ВидАбонемента,, Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("000000001"), ТекущаяДата(), , Справочники.Валюты.НайтиПоКоду("980"));
			Ответ = Вопрос("Срок действия абонемента "+Элемент.Значение+" закончен "+Символы.ПС+
			  "  "+Формат(НачалоДня(ТекущаяДата())+КолДней*24*3600 ,"ДФ=dd.MM.yyyy")+"."+Символы.ПС+
			  " Цена:  "+ВРЕГ(Элемент.Значение.ВидАбонемента.Наименование)+
			  " - "+Формат(ЦенаАбонемента,"ЧДЦ=2; ЧГ=3,0")+"грн. "+Символы.ПС+
			  " Оплатить абонемент?", РежимДиалогаВопрос.ДаНетОтмена);
			  ОплатитьАбонементПоОкончаниюТренировки=Ложь;
			  Если Ответ = КодВозвратаДиалога.Да тогда
				  // откроем платеж
				  НовОплата=Документы.ОплатаАбонемента.СоздатьДокумент();
				  НовОплата.Абонемент=Элемент.Значение;
				  НовОплата.ВидАбонемента=НовОплата.Абонемент.ВидАбонемента;
				  НовОплата.Дата		=	ТекущаяДата();
				  НовОплата.Касса		=	ЭтотОбъект.Касса;
				  НовОплата.Клиент		=	НовОплата.Абонемент.Клиент;
				  //ДлинаТекМесяца=КонецМесяца(ЭтотОбъект.Дата)-НачалоМесяца(ЭтотОбъект.Дата)-24*3600;
				  //НовОплата.СрокДействия=ТекущаяДата()+?(НовОплата.ВидАбонемента.ПериодДействия=0,ДлинаТекМесяца,НовОплата.ВидАбонемента.ПериодДействия*24*3600);
				  //+++ 160206
				  ДлинаТекМесяца=КонецМесяца(ЭтотОбъект.Дата)-НачалоМесяца(ЭтотОбъект.Дата);//-24*3600;
				  НовОплата.СрокДействия=НачалоДня(ТекущаяДата())+?(НовОплата.ВидАбонемента.ПериодДействия=0,ДлинаТекМесяца,НовОплата.ВидАбонемента.ПериодДействия*24*3600+?(НовОплата.ВидАбонемента.ПериодДействия=1,-1,1));
				  //---
				  
				  НовОплата.ТипЦены		=Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("000000001");
				  НовОплата.Цена        =ЦенаАбонемента;
				  НовОплата.Сумма       =ЦенаАбонемента;
				  НовОплата.Подразделение	=ЭтотОбъект.Подразделение;
				  НовОплата.Ответственный	=глЗначениеПеременной("глТекущийПользователь");
				  НовОплата.Организация	=ЭтотОбъект.Организация;
				  НовОплата.АдминСЗ=ДополнительныеФункции.НайтиСотрудника(Справочники.ДолжностиОрганизаций.НайтиПоКоду("000000004"),"НадписьАдминистратор",ТекущаяДата());
				  НовОплата.ПолучитьФорму("ФормаДокумента").ОткрытьМодально();
			  ИначеЕсли Ответ = КодВозвратаДиалога.Нет тогда				  
				  ОплатитьАбонементПоОкончаниюТренировки=Истина;
			  ИначеЕсли Ответ = КодВозвратаДиалога.Отмена тогда
				  
				// ЭлементыФормы.Абонемент.Значение=Справочники.Абонемент.ПустаяСсылка();
 				ЭтаФорма.Абонемент=Справочники.Абонемент.ПустаяСсылка();
				ЭтаФорма.ТекущийЭлемент=ЭлементыФормы.Абонемент;
				Возврат;  
			КонецЕсли;
		  КонецЕсли;
		  СтруДней=ДополнительныеФункции.РасчетОставшихсяДней(Элемент.Значение); // расчет повторно в зависимости от оплаты 
		  Если СтруДней.КолДней<0 
				  И ОплатитьАбонементПоОкончаниюТренировки=Ложь  тогда
				  //ЭлементыФормы.Абонемент.Значение=Справочники.Абонемент.ПустаяСсылка();
					ЭтаФорма.Абонемент=Справочники.Абонемент.ПустаяСсылка();
					ЭтаФорма.ТекущийЭлемент=ЭлементыФормы.Абонемент;
				  возврат;
		  КонецЕсли;
		  ДополнительныеФункции.НадписьСрокДействия(КолДней,
		  						СтруктураОплатыАб.ДатаНачала, 
							СтруктураОплатыАб.ДатаОкончания,
						ЭтаФорма);
		  НадписьКлиент(Элемент.Значение,КолДней);
		  НадписьВидАбонемента(Элемент.Значение,КолДней);
		  НадписьХарактеристики(Элемент.Значение,КолДней,СтруктураОплатыАб.ОстатокПосещений,?(Абонемент.ВидАбонемента.Родитель.Код="00000000038",Истина,Ложь));
		  
		  //*** Проверить Время входа согласно виду абонемента ???
		  ТекВремя=ЭлементыФормы.Абонемент.Значение.ВидАбонемента.ВремяДействия;
		  Если ЗначениеЗаполнено(ТекВремя) тогда   
			  Если Час(ТекущаяДата())>Час(ТекВремя) тогда
				  Предупреждение("Время действия абонемента до "+Час(ТекВремя)+"-00 час.",30,"Внимание!");
			  КонецЕсли;
		  КонецЕсли;
		  //*** 160320  
		  ////**Спросить номерЯщика и записать
		  //ФЯ=ПолучитьОбщуюФорму("ФормаВыбораЯщика");
		  //ФЯ.НачальноеЗначениеВыбора=Элемент.Значение.Клиент.Пол;
		  //ТекЯщик=ФЯ.ОткрытьМодально();
		  ТекЯщик=Справочники.Помещения.ПустаяСсылка(); 
		  //--- 160320 
		  //*** Заполнить документ 
		  МД = Документы.Посещения.СоздатьДокумент();
		  МД.Дата		= ТекущаяДата();
		  МД.Абонемент  = Элемент.Значение;
		  МД.Клиент		= МД.Абонемент.Клиент;
		  МД.ГрупповоеЗанятие=МД.Абонемент.ГрупповоеЗанятие;
		  МД.ВидАбонемента=МД.Абонемент.ВидАбонемента;
		  МД.ДатаВход	 = ТекущаяДата();
		  МД.ДатаВыход	 = Дата(1,1,1);
		  МД.Касса		 			= ЭтотОбъект.Касса;
		  МД.Организация	 		= ЭтотОбъект.Организация;
		  МД.ОплатаПослеТренеровки	= ОплатитьАбонементПоОкончаниюТренировки;
		  МД.Ответственный= глЗначениеПеременной("глТекущийПользователь");
		  МД.АдминСЗ=ДополнительныеФункции.НайтиСотрудника(Справочники.ДолжностиОрганизаций.НайтиПоКоду("000000004"),"НадписьАдминистратор",ТекущаяДата());
		  МД.Ящик			= 	ТекЯщик;			 
		  Если МД.Абонемент.НеобходимТренер тогда
			  МД.ТренерНаемный		=	Справочники.ФизическиеЛица.ПустаяСсылка();
			  МД.ТренерСпортзала	= 	ДополнительныеФункции.НайтиСотрудника(Справочники.ДолжностиОрганизаций.НайтиПоКоду("000000005"),"НадписьТренер",ТекущаяДата());
			  //ЭлементыФормы.НадписьТренер.Значение;
			  мЦена=Ценообразование.ПолучитьЦенуНоменклатуры(Справочники.Номенклатура.НайтиПоКоду("00000000029"),Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка(),Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("000000003"),МД.Дата,,,1);
			  МД.СуммаТренера 	= 	мЦена;
			  МД.ЦенаТренера	=   мЦена;
		  ИначеЕсли  ЗначениеЗаполнено(МД.Абонемент.ПриходящийТренер) И МД.Абонемент.ВидОплатыУслуг=Перечисления.ВидОплатыУслуг.Процент  тогда
			  МД.ТренерНаемный	=	МД.Абонемент.ПриходящийТренер;
			  МД.ТренерСпортзала	=	Справочники.ФизическиеЛица.ПустаяСсылка();
			  МД.СуммаТренера 	= 	?(МД.Абонемент.ЦенаТренера=0,
			  Ценообразование.ПолучитьЦенуНоменклатуры(Справочники.Номенклатура.НайтиПоКоду("00000000029"),Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка(),Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("000000003"),МД.Дата,,,1),
			  МД.Абонемент.ЦенаТренера);
			  МД.ЦенаТренера 	= МД.СуммаТренера;
		  КонецЕсли;
		  Если Элемент.Значение.НеобходимТренер или 
			  (ЗначениеЗаполнено(Элемент.Значение.ПриходящийТренер) и 
			  Элемент.Значение.ВидОплатыУслуг=Перечисления.ВидОплатыУслуг.Процент) тогда
			  мФ=МД.ПолучитьФорму("ФормаДокумента");
			  мФ.ОткрытьМодально();
		  Иначе
			  МД.Записать(РежимЗаписиДокумента.Проведение,РежимПроведенияДокумента.Оперативный);
		  КонецЕсли;	 
			мДок=	МД.Ссылка;
	Иначе
		//*** ЭтоВыход
		ЗапросЯщ = Новый Запрос;
		ЗапросЯщ.Текст = 
		"ВЫБРАТЬ
		|	ЖурналПосещений.Абонемент,
		|	ЖурналПосещений.ДатаВход,
		|	ЖурналПосещений.Ящик,
		|	ЖурналПосещений.Период КАК Период,
		|	ЖурналПосещений.Регистратор
		|ИЗ
		|	РегистрСведений.ЖурналПосещений КАК ЖурналПосещений
		|ГДЕ
		|	ЖурналПосещений.Период >= НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
		|	И ЖурналПосещений.Период <= КОНЕЦПЕРИОДА(&Период, ДЕНЬ)
		|	И ЖурналПосещений.Абонемент = &Абонемент
		|	И ЖурналПосещений.ДатаВыход = ДАТАВРЕМЯ(1, 1, 1)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период";
		
		ЗапросЯщ.УстановитьПараметр("Абонемент", Элемент.Значение);
		ЗапросЯщ.УстановитьПараметр("Период", ТекущаяДата());
		РезультатЯщ = ЗапросЯщ.Выполнить();
		Если РезультатЯщ.Пустой() тогда
			Сообщить("Значение не найдено...");
			Возврат;
		КонецЕсли;
		ВыборкЯщ=РезультатЯщ.Выбрать();
		//ВЯщикеМногоАбонементов=ВыборкЯщ.Количество()>1;
		ВыборкЯщ.Следующий();
		мДок=ВыборкЯщ.Регистратор;
		Если  мДок.ОплатаПослеТренеровки Тогда
			Если ЗначениеЗаполнено(мДок.ТренерСпортзала) 
				или ЗначениеЗаполнено(мДок.ТренерНаемный) Тогда
				мФ=мДок.ПолучитьФорму("ФормаДокумента");
				мф.ДатаВыход=ТекущаяДата();
				мФ.ОткрытьМодально();
			Иначе // оплачиваем только абонемент
				НовОплата=Документы.ОплатаАбонемента.СоздатьДокумент();
				НовОплата.Абонемент=Элемент.Значение;
				НовОплата.ВидАбонемента=НовОплата.Абонемент.ВидАбонемента;
				НовОплата.Дата		=	ТекущаяДата();
				НовОплата.Касса		=	ЭтотОбъект.Касса;
				НовОплата.Клиент		=	НовОплата.Абонемент.Клиент;
				//ДлинаТекМесяца=КонецМесяца(ЭтотОбъект.Дата)-НачалоМесяца(ЭтотОбъект.Дата)-24*3600;
				//НовОплата.СрокДействия=ТекущаяДата()+?(НовОплата.ВидАбонемента.ПериодДействия=0,ДлинаТекМесяца,НовОплата.ВидАбонемента.ПериодДействия*24*3600);
				//+++ 20160206
				ДлинаТекМесяца=КонецМесяца(ЭтотОбъект.Дата)-НачалоМесяца(ЭтотОбъект.Дата);//-24*3600;
				НовОплата.СрокДействия=НачалоДня(ТекущаяДата())+?(НовОплата.ВидАбонемента.ПериодДействия=0,ДлинаТекМесяца,НовОплата.ВидАбонемента.ПериодДействия*24*3600+?(ЭтотОбъект.ВидАбонемента.ПериодДействия=1,-1,1));
				//---
				НовОплата.ТипЦены	  =Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("000000001");
				ЦенаАбонемента=Ценообразование.ПолучитьЦенуНоменклатуры(Элемент.Значение.ВидАбонемента,, Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("000000001"), ТекущаяДата(), , Справочники.Валюты.НайтиПоКоду("980"));
				НовОплата.Цена        =ЦенаАбонемента;
				НовОплата.Сумма       =ЦенаАбонемента;
				НовОплата.Подразделение	=ЭтотОбъект.Подразделение;
				НовОплата.Ответственный	=глЗначениеПеременной("глТекущийПользователь");
				НовОплата.АдминСЗ=ДополнительныеФункции.НайтиСотрудника(Справочники.ДолжностиОрганизаций.НайтиПоКоду("000000004"),"НадписьАдминистратор",ТекущаяДата());
				НовОплата.Организация	=ЭтотОбъект.Организация;
				НовОплата.ПолучитьФорму("ФормаДокумента").ОткрытьМодально();				
				ТекДок=мДок.ПолучитьОбъект();
				ТекДок.ДатаВыход= ТекущаяДата();
				ТекДок.Записать(РежимЗаписиДокумента.Проведение,РежимПроведенияДокумента.Неоперативный);
			КонецЕсли; 
		Иначе	
		  	ТекДок=мДок.ПолучитьОбъект();
			ТекДок.ДатаВыход= ТекущаяДата();
			ТекДок.Записать(РежимЗаписиДокумента.Проведение,РежимПроведенияДокумента.Неоперативный);
		КонецЕсли; 
		МН=РегистрыСведений.ЖурналПосещений.СоздатьНаборЗаписей(); 
		МН.Отбор.Регистратор.Значение =	мДок;
		МН.Прочитать();
		//*** Проверить Время входа???
		ТекВремя=МН[0].ВидАбонемента.ВремяДействия;
		Если ЗначениеЗаполнено(ТекВремя) тогда   
			Если Час(ТекущаяДата())>Час(ТекВремя) тогда
				Предупреждение("Время действия абонемента до "+Час(ТекВремя)+"-00 час.",30,"Внимание!");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
	ЭтаФорма.ТекущийЭлемент=ЭлементыФормы.Посещения;
	ЭтаФорма.Посещения.Обновить();
	УстановитьСтроку(мДок);
	ЭтаФорма.ТекущийЭлемент=ЭлементыФормы.Абонемент;
	ЭтаФорма.Абонемент=Справочники.Абонемент.ПустаяСсылка();
КонецПроцедуры
 
Процедура ОбновитьЖурнал()
	Посещения.Отбор.ДатаВход.ЗначениеС=НачалоДня(ТекущаяДата());
	Посещения.Отбор.ДатаВход.ЗначениеПо=КонецДня(ТекущаяДата());
	Посещения.Отбор.ДатаВход.ВидСравнения=ВидСравнения.ИнтервалВключаяГраницы;
	Посещения.Отбор.ДатаВход.Использование	=Истина;
	
	Посещения.Отбор.Проведен.Значение=Истина;
	Посещения.Отбор.Проведен.ВидСравнения=ВидСравнения.Равно;
	Посещения.Отбор.Проведен.Использование	=Истина;
	
	ЭлементыФормы.Посещения.НастройкаПорядка.ДатаВход.Доступность=Ложь;
	Посещения.Порядок.Установить("ДатаВход Убыв");
	ЭлементыФормы.Посещения.ОбновитьСтроки();
	
КонецПроцедуры

Процедура ЖурналПосещенийПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ДанныеСтроки.ДатаВыход=Дата(1,1,1) Тогда
	    ОформлениеСтроки.ЦветФона=WebЦвета.СветлоЖелтый;
		ТекЦвет=ДанныеСтроки.Ящик.Владелец.Цвет.Получить();
		Если ТипЗнч(ТекЦвет) = Тип("Цвет") Тогда
			ОформлениеСтроки.Ячейки.Ящик.ЦветФона=ТекЦвет;
		КонецЕсли; 
	Иначе	
	    ОформлениеСтроки.ЦветФона=WebЦвета.ГолубойСоСтальнымОттенком;
	КонецЕсли;
	ОформлениеСтроки.Ячейки.ДатаВход.Текст=Формат(ОформлениеСтроки.Ячейки.ДатаВход.Значение,"ДЛФ=T");
	ОформлениеСтроки.Ячейки.ДатаВыход.Текст=Формат(ОформлениеСтроки.Ячейки.ДатаВыход.Значение,"ДЛФ=T");
КонецПроцедуры

Процедура ЖурналПосещенийПриАктивизацииСтроки(Элемент)
	Если Элемент.ТекущиеДанные=Неопределено тогда
		возврат;
	КонецЕсли;
	
	мТекущееОсновноеИзображение =Элемент.ТекущиеДанные.Абонемент.Клиент.ОсновноеИзображение.Хранилище.Получить();
	//Справочники.ХранилищеДополнительнойИнформации.НайтиПоРеквизиту("Объект",Элемент.ТекущиеДанные.Абонемент.Клиент).ИмяФайла;
	ЭлементыФормы.ОсновноеИзображение.Масштабировать=Истина;
	Если мТекущееОсновноеИзображение = Неопределено Тогда
		ЭлементыФормы.ОсновноеИзображение.Картинка = мПустаяКартинка;
	Иначе
		ЭлементыФормы.ОсновноеИзображение.Картинка = мТекущееОсновноеИзображение;
	КонецЕсли;
	СтруктураОплатыАб=ДополнительныеФункции.РасчетОставшихсяДней(Элемент.ТекущиеДанные.Абонемент);
	КолДней=?(Элемент.ТекущиеДанные.Абонемент.ВидАбонемента.Родитель.Код="00000000019" ,99,СтруктураОплатыАб.КолДней);
	
	ДополнительныеФункции.НадписьСрокДействия(КолДней,
							СтруктураОплатыАб.ДатаНачала, 
						СтруктураОплатыАб.ДатаОкончания,
					ЭтаФорма);
	
	НадписьКлиент(Элемент.ТекущиеДанные.Абонемент,КолДней);
    НадписьВидАбонемента(Элемент.ТекущиеДанные.Абонемент,КолДней);
	НадписьХарактеристики(Элемент.ТекущиеДанные.Абонемент,
			КолДней,СтруктураОплатыАб.ОстатокПосещений,
			?(Элемент.ТекущиеДанные.Абонемент.ВидАбонемента.Родитель.Код="00000000038",Истина,Ложь));
КонецПроцедуры

Процедура УстановитьСтроку(Регистратор) Экспорт
	ЭлементыФормы.Посещения.ТекущаяСтрока =Регистратор ;
КонецПроцедуры   

Процедура ПодсчитатьКоличество()
    КоличествоПрисутствующих=0;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЖурналПосещений.ДатаВход) КАК Кол
		|ИЗ
		|	РегистрСведений.ЖурналПосещений КАК ЖурналПосещений
		|ГДЕ
		|	ЖурналПосещений.ДатаВыход = ДАТАВРЕМЯ(1, 1, 1)
		|	И ЖурналПосещений.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ) И КОНЕЦПЕРИОДА(&Дата, ДЕНЬ)";
		
	Запрос.УстановитьПараметр("Дата",ТекущаяДата());
	Результат = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Если не Результат.Пустой() Тогда
		ВыборкаДетальныеЗаписи.Следующий();
	    КоличествоПрисутствующих=ВыборкаДетальныеЗаписи.Кол;
	КонецЕсли; 
    ЭлементыФормы.НадписьВсегоКлиентов.Значение="Присутствует "+ Формат(КоличествоПрисутствующих,"ЧДЦ=0; ЧН=; ЧГ=3,0")+ " чел.";

КонецПроцедуры

Процедура НадписьКлиент(Абонемент,КолДней)
	ЭлементыФормы.НадписьКлиент.Значение	=Абонемент.Клиент.Наименование;
	Если КолДней < 0 тогда
		ЭлементыФормы.НадписьКлиент.ЦветТекста=WebЦвета.СветлоРозовый; 
	ИначеЕсли 	КолДней < 5 Тогда
		ЭлементыФормы.НадписьКлиент.ЦветТекста=WebЦвета.Красный; 
	Иначе
		ЭлементыФормы.НадписьКлиент.ЦветТекста=WebЦвета.Зеленый; 
	КонецЕсли;

КонецПроцедуры

Процедура НадписьВидАбонемента(Абонемент,КолДней)
	ЭлементыФормы.НадписьВидАбонемента.Значение	=Абонемент.ВидАбонемента.Наименование;
	Если КолДней < 0 тогда
		ЭлементыФормы.НадписьВидАбонемента.ЦветТекста=WebЦвета.СветлоРозовый; 
	ИначеЕсли 	КолДней < 5 Тогда
		ЭлементыФормы.НадписьВидАбонемента.ЦветТекста=WebЦвета.Красный; 
	Иначе
		ЭлементыФормы.НадписьВидАбонемента.ЦветТекста=WebЦвета.Зеленый; 
	КонецЕсли;
КонецПроцедуры

Процедура КнопкаОплатитьАбонементНажатие(Элемент)
	мДок=Документы.ОплатаАбонемента.ПолучитьФорму("ФормаДокумента");
	мДок.Дата			=ТекущаяДата();
	мДок.Касса			=ЭтотОбъект.Касса;
	мДок.Подразделение	=ЭтотОбъект.Подразделение;
	мДок.Ответственный	=глЗначениеПеременной("глТекущийПользователь");
	мДок.Организация	=ЭтотОбъект.Организация;
    мДок.ВладелецФормы  = ЭтаФорма ;
	мДок.ЗакрыватьПриЗакрытииВладельца=Истина;
	мДок.ИзменятьСпособОтображенияОкна=ИзменениеСпособаОтображенияОкна.Авто;
	мДок.ИзменениеРазмера=ИзменениеРазмераОкна.Изменять;
	мДок.СпособОтображенияОкна=ВариантСпособаОтображенияОкна.Минимизированное;
	мДок.ТипЦены		=Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("000000001");	
	мДок.АдминСЗ=ДополнительныеФункции.НайтиСотрудника(Справочники.ДолжностиОрганизаций.НайтиПоКоду("000000004"),"НадписьАдминистратор",ТекущаяДата());
	мДок.Открыть();
КонецПроцедуры

Процедура КнопкаПриостановитьАбонементНажатие(Элемент)
	мДок=Документы.ПриостановкаАбонемента.ПолучитьФорму("ФормаДокумента");
	мДок.Дата			=ТекущаяДата();
    мДок.ВладелецФормы  = ЭтаФорма ;
	мДок.ЗакрыватьПриЗакрытииВладельца=Истина;
	мДок.ИзменятьСпособОтображенияОкна=ИзменениеСпособаОтображенияОкна.Авто;
	мДок.ИзменениеРазмера=ИзменениеРазмераОкна.Изменять;
	мДок.СпособОтображенияОкна=ВариантСпособаОтображенияОкна.Минимизированное;
	мДок.АдминСЗ=ДополнительныеФункции.НайтиСотрудника(Справочники.ДолжностиОрганизаций.НайтиПоКоду("000000004"),"НадписьАдминистратор",ТекущаяДата());
	мДок.Открыть();
КонецПроцедуры

Процедура КнопкаНовыйАбонементНажатие(Элемент)
	НовАб=Справочники.Абонемент.ПолучитьФорму("ФормаЭлемента");
	НовАб.ВладелецФормы  = ЭтаФорма ;
	НовАб.ЗакрыватьПриЗакрытииВладельца=Истина;
	НовАб.ИзменятьСпособОтображенияОкна=ИзменениеСпособаОтображенияОкна.Авто;
	НовАб.ИзменениеРазмера=ИзменениеРазмераОкна.Изменять;
	НовАб.СпособОтображенияОкна=ВариантСпособаОтображенияОкна.Минимизированное;
	НовАб.АдминСЗ=ДополнительныеФункции.НайтиСотрудника(Справочники.ДолжностиОрганизаций.НайтиПоКоду("000000004"),"НадписьАдминистратор",ТекущаяДата());
	НовАб.Открыть();
КонецПроцедуры

Процедура НадписьХарактеристики(Абонемент,КолДней,ОстатокПосещений,ЭтоГрупповыеЗанятия=Ложь)
	Если КолДней < 0 ИЛИ (ОстатокПосещений <= 0 И ЭтоГрупповыеЗанятия) тогда
		ЭлементыФормы.НадписьХарактеристики.ЦветТекста=WebЦвета.СветлоРозовый; 
		ЭлементыФормы.НадписьХарактеристики.БегущаяСтрока=РежимБегущейСтроки.НеИспользовать;
	ИначеЕсли 	КолДней < 5 или (ОстатокПосещений <= 2 И ЭтоГрупповыеЗанятия) Тогда
		ЭлементыФормы.НадписьХарактеристики.ЦветТекста=WebЦвета.Красный; 
		ЭлементыФормы.НадписьХарактеристики.БегущаяСтрока=РежимБегущейСтроки.НеИспользовать;
	Иначе
		ЭлементыФормы.НадписьХарактеристики.ЦветТекста=WebЦвета.Зеленый; 
		ЭлементыФормы.НадписьХарактеристики.БегущаяСтрока=РежимБегущейСтроки.НеИспользовать;
	КонецЕсли;
	Если Абонемент.НеобходимТренер тогда
		ЭлементыФормы.НадписьХарактеристики.Значение	="Тренер "+СокрЛП(ЭтаФорма.ЭлементыФормы.НадписьТренер.Значение)+ ". "+СокрЛП(Абонемент.Комментарий);			
	ИначеЕсли Абонемент.ЯвляетсяТренером тогда	
		ЭлементыФормы.НадписьХарактеристики.Значение	="Является тренером !!!";			
	ИначеЕсли ЗначениеЗаполнено(Абонемент.ПриходящийТренер) тогда	
		ЭлементыФормы.НадписьХарактеристики.Значение	="Прих. тренер "+ВРЕГ(СокрЛП(Абонемент.ПриходящийТренер)) +". "+СокрЛП(Абонемент.Комментарий);
	ИначеЕсли не ЗначениеЗаполнено(Абонемент.ПриходящийТренер) И не Абонемент.ЯвляетсяТренером
		И не Абонемент.ЯвляетсяТренером  И не ЭтоГрупповыеЗанятия тогда	
		ЭлементыФормы.НадписьХарактеристики.Значение	="Занимается самостоятельно! "+СокрЛП(Абонемент.Комментарий);
	ИначеЕсли ЭтоГрупповыеЗанятия тогда	
		ЭлементыФормы.НадписьХарактеристики.Значение	="Г/З "+СокрЛП(Абонемент.ГрупповоеЗанятие.Наименование)
		+" - "+ОстатокПосещений+" посещ.   "+СокрЛП(Абонемент.Комментарий);
	КонецЕсли;
КонецПроцедуры

Процедура ПродажиБарНажатие(Элемент)
	ДокБар=Документы.ПродажиСпортзал.ПолучитьФорму("ФормаДокумента");
	ДокБар.ВладелецФормы  = ЭтаФорма ;
	ДокБар.ЗакрыватьПриЗакрытииВладельца=Истина;
	ДокБар.ИзменятьСпособОтображенияОкна=ИзменениеСпособаОтображенияОкна.Авто;
	ДокБар.ИзменениеРазмера=ИзменениеРазмераОкна.Изменять;
	ДокБар.СпособОтображенияОкна=ВариантСпособаОтображенияОкна.Минимизированное;
	ДокБар.АдминСЗ=ДополнительныеФункции.НайтиСотрудника(Справочники.ДолжностиОрганизаций.НайтиПоКоду("000000004"),"НадписьАдминистратор",ТекущаяДата());
	ДокБар.Открыть();
КонецПроцедуры

Процедура НадписьАдминистратор1Нажатие(Элемент)
	Должность=Справочники.ДолжностиОрганизаций.НайтиПоКоду("000000004");
	ИзменитьСотрудникаНаДолжности(Должность,"НадписьАдминистратор1");
КонецПроцедуры

Процедура ЖурналПосещенийПередНачаломИзменения(Элемент, Отказ)
	Отказ=Истина;
КонецПроцедуры

Процедура ОсновноеИзображениеНажатие(Элемент)
//открыть параметры абонемента
ма=Элемент.ТекущиеДанные.Абонемент.Получить();
ма.ПолучитьФорму("ФормаЭлемента").ОткрытьМодально();
КонецПроцедуры

Процедура КнопкаЗаменаАбонементаТрендНажатие(Элемент)
	ЭтотОбъект.ПолучитьФорму("ФормаШтрихкодаТренд").ОткрытьМодально();
КонецПроцедуры

Процедура АбонементПоисткаПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Элемент.Значение) Тогда
		Посещения.Отбор.Абонемент.Использование = Истина;
		Посещения.Отбор.Абонемент.ВидСравнения  = ВидСравнения.Равно;
		Посещения.Отбор.Абонемент.Значение 		= Элемент.Значение;
		Посещения.Обновить();
	Иначе
		Посещения.Отбор.Абонемент.Использование = Ложь;
		Посещения.Обновить();
	КонецЕсли;	
КонецПроцедуры

Процедура КлиентПоискаПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Элемент.Значение) тогда
		СтрКли			=Элемент.Значение;
		Посещения.Отбор.Сбросить();
		Если  не ЗначениеЗаполнено(СтрКли) тогда
			возврат;
		КонецЕсли;
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Абонементы.Ссылка КАК Ссылка,
		|	Абонементы.Клиент.Наименование КАК Клиент
		|ИЗ
		|	Справочник.Абонемент КАК Абонементы
		|ГДЕ
		|	Абонементы.ПометкаУдаления = ЛОЖЬ
		|	И Абонементы.Клиент.Наименование ПОДОБНО &СтрКли";
		
		Запрос.УстановитьПараметр("СтрКли", "%"+СтрКли+"%");
		Результат = Запрос.Выполнить();
		
		Если Результат.Пустой() тогда
			Сообщить("Нет совпадений  "+СтрКли);
			возврат;
		КонецЕсли;
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		ОтборДок = Новый СписокЗначений;
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
			ОтборДок.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
		КонецЦикла;
		Посещения.Отбор.Абонемент.ВидСравнения  = ВидСравнения.ВСписке;
		Посещения.Отбор.Абонемент.Значение = ОтборДок;
		Посещения.Отбор.Абонемент.Использование = Истина;
	Иначе
		ОбновитьЖурнал();
	КонецЕсли;	
КонецПроцедуры

Процедура КлиентПоискаОчистка(Элемент, СтандартнаяОбработка)
	 Посещения.Отбор.Сбросить();   
	 Посещения.Отбор.Абонемент.Использование = Ложь;	
	 ОбновитьЖурнал();
КонецПроцедуры

Процедура АбонементПоисткаОчистка(Элемент, СтандартнаяОбработка)
	 Посещения.Отбор.Сбросить();   
	 Посещения.Отбор.Абонемент.Использование = Ложь;	
	 ОбновитьЖурнал();
КонецПроцедуры

Процедура ОбновитьОплатыАбонемента()
	ОплатаАбонементов.Отбор.Дата.ЗначениеС=НачалоДня(ТекущаяДата());
	ОплатаАбонементов.Отбор.Дата.ЗначениеПо=КонецДня(ТекущаяДата());
	ОплатаАбонементов.Отбор.Дата.ВидСравнения=ВидСравнения.ИнтервалВключаяГраницы;
	ОплатаАбонементов.Отбор.Дата.Использование	=Истина;
	
	ОплатаАбонементов.Отбор.Проведен.Значение=Истина;
	ОплатаАбонементов.Отбор.Проведен.ВидСравнения=ВидСравнения.Равно;
	ОплатаАбонементов.Отбор.Проведен.Использование	=Истина;
КонецПроцедуры	

Процедура ОбновитьПродажи()
	ПродажиСпортзал.Отбор.Дата.ЗначениеС=НачалоДня(ТекущаяДата());
	ПродажиСпортзал.Отбор.Дата.ЗначениеПо=КонецДня(ТекущаяДата());
	ПродажиСпортзал.Отбор.Дата.ВидСравнения=ВидСравнения.ИнтервалВключаяГраницы;
	ПродажиСпортзал.Отбор.Дата.Использование	=Истина;
	
	ПродажиСпортзал.Отбор.Проведен.Значение=Истина;
	ПродажиСпортзал.Отбор.Проведен.ВидСравнения=ВидСравнения.Равно;
	ПродажиСпортзал.Отбор.Проведен.Использование	=Истина;
КонецПроцедуры	

Процедура ОбновитьДанныеТаблиц(ТекущаяСтраница)
	ЭтаФорма[ЭлементыФормы.ПанельДанных.Страницы[ТекущаяСтраница].Имя].Отбор.Дата.ЗначениеС=НачалоДня(ТекущаяДата());
	ЭтаФорма[ЭлементыФормы.ПанельДанных.Страницы[ТекущаяСтраница].Имя].Отбор.Дата.ЗначениеПо=КонецДня(ТекущаяДата());
	ЭтаФорма[ЭлементыФормы.ПанельДанных.Страницы[ТекущаяСтраница].Имя].Отбор.Дата.ВидСравнения=ВидСравнения.ИнтервалВключаяГраницы;
	ЭтаФорма[ЭлементыФормы.ПанельДанных.Страницы[ТекущаяСтраница].Имя].Отбор.Дата.Использование	=Истина;
	
	ЭтаФорма[ЭлементыФормы.ПанельДанных.Страницы[ТекущаяСтраница].Имя].Отбор.Проведен.Значение=Истина;
	ЭтаФорма[ЭлементыФормы.ПанельДанных.Страницы[ТекущаяСтраница].Имя].Отбор.Проведен.ВидСравнения=ВидСравнения.Равно;
	ЭтаФорма[ЭлементыФормы.ПанельДанных.Страницы[ТекущаяСтраница].Имя].Отбор.Проведен.Использование	=Истина;
КонецПроцедуры	

Процедура ПанельДанныхПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ЭлементыФормы.ПанельДанных.Страницы[ТекущаяСтраница].Имя=ЭлементыФормы.ПанельДанных.Страницы.ОплатаАбонементов.Имя  Тогда
	    ОбновитьДанныеТаблиц(ТекущаяСтраница);
	ИначеЕсли ЭлементыФормы.ПанельДанных.Страницы[ТекущаяСтраница].Имя=ЭлементыФормы.ПанельДанных.Страницы.Посещения.Имя Тогда	 
		ОбновитьЖурнал();
	ИначеЕсли ЭлементыФормы.ПанельДанных.Страницы[ТекущаяСтраница].Имя=ЭлементыФормы.ПанельДанных.Страницы.ПродажиСпортзал.Имя Тогда	 		
		ОбновитьДанныеТаблиц(ТекущаяСтраница);
	ИначеЕсли ЭлементыФормы.ПанельДанных.Страницы[ТекущаяСтраница].Имя=ЭлементыФормы.ПанельДанных.Страницы.ПриостановкаАбонемента.Имя Тогда	 		
		ОбновитьДанныеТаблиц(ТекущаяСтраница);
	КонецЕсли; 	
КонецПроцедуры

мПустаяКартинка = Новый Картинка;
//	СтрОстатокПосещений="( посещений - "+ОстатокПосещений+" )";
//,
//					СтруктураОплатыАб.ОстатокПосещений,?(Абонемент.ВидАбонемента.Родитель.Код="00000000038",Истина,Ложь)